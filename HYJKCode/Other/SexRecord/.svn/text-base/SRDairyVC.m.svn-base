//
//  SRDairyVC.m
//  sexduoduo
//
//  Created by ly1992 on 15/6/3.
//  Copyright (c) 2015年 dbCode. All rights reserved.
//

#import "SRDairyVC.h"
#import "FSCalendar.h"
#import "SSLunarDate.h"
#import "SRReportVC.h" 
#import "NSDate+Extend.h"
#import "NSDate+FSExtension.h"

#define kUserIconWH SCREEN_SPACE(80)

@interface SRDairyVC ()<FSCalendarDataSource,FSCalendarDelegate>
//日历模块
@property (strong,nonatomic) UIView *diaryView;
@property (strong, nonatomic) FSCalendar *calendar;
@property (strong, nonatomic) NSCalendar *currentCalendar;
//头像
@property (strong, nonatomic) UIButton *userBtn;
//用户名
@property (strong,nonatomic) UILabel *nameLabel;
//用户等级
@property (strong,nonatomic)UIImageView *iconImageView;
@property (strong,nonatomic) UILabel *label_level;
//
@property (strong, nonatomic) UIImageView *imageAlert;
//标题
@property (strong,nonatomic) UILabel *titleLabel;
//当前月份
@property (strong,nonatomic) NSString *currentMonth;
//记录过 数组集合
@property (strong,nonatomic)NSMutableArray *hasArray;

@end

@implementation SRDairyVC

- (void)viewDidLoad
{
    [super viewDidLoad];
    
    [self initView];
    
    [self initUserIcon];
    
    [self setTopNavView];
}


-(void)viewWillAppear:(BOOL)animated
{
    [super viewWillAppear:animated];
    if (!ISLOGIN){
        _nameLabel.text = @"请先登录";
        CGSize size = [_nameLabel.text sizeWithFont:_nameLabel.font];
        _nameLabel.frame = CGRectMake((_scrollView.width - size.width)/2, _userBtn.bottom + SCREEN_SPACE(5), size.width, size.height);
    }
    [self initData];
}

#pragma mark ---UI
//顶部NavView
-(void)setTopNavView
{
    int imgY = -20;
    if (IOS7_OR_LATER) {
        imgY = 0;
    }
    UIView *navView=[[UIView alloc] initWithFrame:CGRectMake(0, imgY, SCREEN_WIDTH, 64)];
    navView.backgroundColor = [UIColor clearColor];
    navView.userInteractionEnabled = YES;
    [self.view addSubview:navView];
    UIImageView *imageView = [[UIImageView alloc]init];
    imageView.backgroundColor = [UIColor clearColor];
    imageView.frame = CGRectMake(0, 0, navView.width, navView.height);
    imageView.image = [UIImage imageNamed:@"record_homeNav"];
    [navView addSubview:imageView];
    //
    UIButton *leftBtn = [UIButton buttonWithType:UIButtonTypeCustom];
    leftBtn.frame = CGRectMake(SCREEN_SPACE(10), SCREEN_SPACE(25) , SCREEN_SPACE(44), SCREEN_SPACE(44));
    [leftBtn setImage:[UIImage imageNamed:@"record_back"] forState:UIControlStateNormal];
    [leftBtn addTarget:self action:@selector(bt_action_topEvent:) forControlEvents:UIControlEventTouchUpInside];
    leftBtn.tag = 1;
    [navView addSubview:leftBtn];
    //
    UIImageView *imageTitle = [[UIImageView alloc]init];
    imageTitle.frame = CGRectMake(160-92/3., 30, 92*2/3., 38*2/3.);
    imageTitle.centerX = SCREEN_WIDTH/2.;

    imageTitle.backgroundColor = [UIColor clearColor];
    imageTitle.image =[UIImage imageNamed:@"record_title_nav"];
    [navView addSubview:imageTitle];
}

- (void)initView
{
    //背景图
    UIImageView *imgV = [[UIImageView alloc]initWithFrame:CGRectMake(0, 0,SCREEN_WIDTH, SCREEN_HEIGHT)];
    imgV.backgroundColor = [UIColor clearColor];
    imgV.image = [UIImage imageNamed:@"record_bg"];
    [self.view addSubview:imgV];
    [self.view addSubview:_scrollView];
    _scrollView.top = SCREEN_SPACE(74);
    //日历背景View
    UIView *dView = [[UIView alloc]initWithFrame:CGRectMake(SCREEN_SPACE(5), SCREEN_SPACE(5), SCREEN_WIDTH - SCREEN_SPACE(10), SCREEN_SPACE(360))];
    dView.backgroundColor = RGBACOLOR(0.0, 0.0, 0.0, 0.2);
    dView.layer.cornerRadius = 6.0f;
    dView.layer.masksToBounds = YES;
    [_scrollView addSubview:dView];
    _diaryView = dView;
    
    //绘制日历头部
    FSCalendarHeader *scalenderHeader = [[FSCalendarHeader alloc] initWithFrame:CGRectMake(0,0,dView.width,SCREEN_SPACE(40))];
    scalenderHeader.titleFont = [UIFont systemFontOfSize:16.0];
    scalenderHeader.backgroundColor = RGBACOLOR(0.0, 0.0, 0.0, 0.3);
    [dView addSubview:scalenderHeader];
    
    
    //绘制日历模块
    _currentCalendar = [NSCalendar currentCalendar];
    self.calendar = [[FSCalendar alloc]initWithFrame:CGRectMake(0, SCREEN_SPACE(35), SCREEN_WIDTH, SCREEN_SPACE(325))];
    self.calendar.backgroundColor = [UIColor clearColor];
    self.calendar.dataSource = self;
    self.calendar.delegate = self;
    self.calendar.header = scalenderHeader;
    
    
    //方向设定
    self.calendar.flow = FSCalendarFlowHorizontal;
    [dView addSubview:_calendar];
    [self setCalendarStyle];
}

- (void)setCalendarStyle
{
    [self.calendar setWeekdayTextColor:[UIColor whiteColor]];
    [self.calendar setHeaderTitleColor:[UIColor whiteColor]];
    [self.calendar setEventColor:nil];                          //事件样式
    [self.calendar setHeaderDateFormat:@"yyyy年MM月"];          //头部中间样式
    [self.calendar setMinDissolvedAlpha:0.0];                  //头部左右两边透明度
    [self.calendar setTodayColor:nil];                         //今天背景色
    [self.calendar setSelectionColor:nil];                     //选中背景色
    [self.calendar setCellStyle:FSCalendarCellStyleCircle];    //选中样式
}
- (void)initUserIcon
{
    //头像
    UIButton *userBtn = [UIButton buttonWithType:UIButtonTypeCustom];
    userBtn.backgroundColor = [UIColor clearColor];
    userBtn.frame = CGRectMake((SCREEN_WIDTH - kUserIconWH)/2, _diaryView.bottom - kUserIconWH/2, kUserIconWH, kUserIconWH);
    userBtn.layer.cornerRadius = kUserIconWH/2;
    userBtn.layer.borderColor = RGBCOLOR(176, 103, 140).CGColor;
    userBtn.layer.masksToBounds = YES;
    userBtn.layer.borderWidth = 3.0f;
    [userBtn setImage:[PublicMethod getHeaderImage] forState:UIControlStateNormal];
    [userBtn addTarget:self action:@selector(bt_action_icon) forControlEvents:UIControlEventTouchUpInside];
    [self.scrollView addSubview:userBtn];
    _userBtn = userBtn;
    //用户名
    UILabel *label_use = [[UILabel alloc]init];
    label_use.backgroundColor = [UIColor clearColor];
    label_use.textColor = [UIColor whiteColor];
    label_use.font = [UIFont systemFontOfSize:16.0f];
    label_use.text = NICKNAME;
    CGSize size = [label_use.text sizeWithFont:label_use.font];
    label_use.frame = CGRectMake((_scrollView.width - size.width)/2, _userBtn.bottom + SCREEN_SPACE(5), size.width, size.height);
    [self.scrollView addSubview:label_use];
    _nameLabel = label_use;
    //
    UIImage *iconImage = [UIImage imageNamed:@"record_lever_bg"];
    UIImageView *iconImageView = [[UIImageView alloc]initWithFrame:CGRectMake(label_use.right + SCREEN_SPACE(5), label_use.top + 2, iconImage.size.width, iconImage.size.height)];
    iconImageView.backgroundColor = [UIColor clearColor];
    iconImageView.image = iconImage;
    [self.scrollView addSubview:iconImageView];
    UILabel *label_level = [[UILabel alloc]init];
    label_level.backgroundColor = [UIColor clearColor];
    label_level.textColor = [UIColor whiteColor];
    label_level.textAlignment = NSTextAlignmentCenter;
    label_level.font = [UIFont boldSystemFontOfSize:10.0f];
    label_level.frame = CGRectMake(0, SCREEN_SPACE(4), iconImageView.width, 10);
    label_level.text = [NSString stringWithFormat:@"%@",BBSUSERLEVELNUMBER];
    [iconImageView addSubview:label_level];
    _label_level = label_level;
    _iconImageView = iconImageView;
    _iconImageView.hidden = YES;
    //提示语
    UILabel *label_alert = [[UILabel alloc]init];
    label_alert.backgroundColor = [UIColor clearColor];
    label_alert.textColor = [UIColor whiteColor];
    label_alert.textAlignment = NSTextAlignmentCenter;
    label_alert.font = [UIFont systemFontOfSize:14.0f];
    label_alert.text = @"性生活频率正常,继续保持哦~";
    size = [label_alert.text sizeWithFont:label_alert.font];
    label_alert.frame = CGRectMake((SCREEN_WIDTH - size.width)/2, _userBtn.bottom + SCREEN_SPACE(30), size.width, size.height);
    [self.scrollView addSubview:label_alert];
    //
    UIImage *image = [UIImage imageNamed:@"record_diary_alert"];
    UIImageView *imageIcon = [[UIImageView alloc]init];
    imageIcon.backgroundColor = [UIColor clearColor];
    imageIcon.frame = CGRectMake(label_alert.left - image.size.width - SCREEN_SPACE(5), label_alert.top, image.size.width, label_alert.size.height);
    imageIcon.image = image;
    [self.scrollView addSubview:imageIcon];
    
     _scrollView.contentSize = CGSizeMake(0, imageIcon.bottom + 150);
}
- (void)reloadView
{
    _nameLabel.text = NICKNAME;
    CGSize size = [_nameLabel.text sizeWithFont:_nameLabel.font];
    _nameLabel.frame = CGRectMake((_scrollView.width - size.width)/2, _userBtn.bottom + SCREEN_SPACE(5), size.width, size.height);
    UIImage *iconImage = [UIImage imageNamed:@"record_lever_bg"];
    _iconImageView.frame = CGRectMake(_nameLabel.right + SCREEN_SPACE(5), _nameLabel.top + 2, iconImage.size.width, iconImage.size.height);
    _iconImageView.hidden = NO;
    _label_level.frame = CGRectMake(0, SCREEN_SPACE(4), _iconImageView.width, 10);
    _label_level.text = [NSString stringWithFormat:@"%@",BBSUSERLEVELNUMBER];
    [_userBtn setImage:[PublicMethod getHeaderImage] forState:UIControlStateNormal];
}
#pragma mark ---data
- (void)initData
{
    if (_hasArray == nil) {
        _hasArray = [[NSMutableArray alloc]init];
    }
    NSDate *date = [NSDate new];
    NSString* currentMonth = [NSDate dateStringYMFromDate:date];
    [self getYearMonthWithDate:currentMonth];
    
}
- (void)getYearMonthWithDate:(NSString*)dateStr
{
    if (!ISLOGIN){
        [self.calendar reloadData];
        return;
    }
    NSMutableDictionary *dict = [NSMutableDictionary dictionary];
    if (USERID) {
        [dict setObject:USERID forKey:@"memberId"]; //todo USERID
    }
    [dict setObject:DEVICEUUID forKey:@"imie"];
    [dict setObject:dateStr forKey:@"date"];
    
    [ShareFunction showHUDWithText:@"请稍等..."];
    [[MKHttpServiceEngine shareMyInstance] requestSRDairyWithDic:dict completionHandler:^(id responseObject) {
        [ShareFunction hiddenHUD];
        NSDictionary *responseDic = responseObject;
        NSLog(@"%@",responseDic);
        if (responseDic[@"success"] && responseDic[@"datasource"])
        {
            NSArray *reportArr = responseDic[@"datasource"];
            [_hasArray removeAllObjects];
            [_hasArray addObjectsFromArray:reportArr];
            [self.calendar reloadData];
            [self reloadView];
        } else {
            [ShareFunction hiddenHUD];
            [ShareFunction showToast:@"请求失败,请重试..."];
        }
    } errorHandler:^(NSError *error) {
        [ShareFunction hiddenHUD];
        [ShareFunction showToast:@"请求失败,请重试..."];
    }];

}


- (void)getMonthDayWithDate:(NSString*)dateStr;
{
    NSMutableDictionary *dict = [NSMutableDictionary dictionary];
    if (USERID) {
        [dict setObject:USERID forKey:@"memberId"]; //todo USERID
    }
    [dict setObject:DEVICEUUID forKey:@"imie"];
    [dict setObject:dateStr forKey:@"date"];
    
//    NSLog(@"参数=%@",dict);
    
    [ShareFunction showHUDWithText:@"请稍等..."];
    [[MKHttpServiceEngine shareMyInstance] requestSRDairyDetailWithDic:dict completionHandler:^(id responseObject) {
        [ShareFunction hiddenHUD];
        NSDictionary *responseDic = responseObject;
        NSLog(@"responseDic === %@",responseDic);
        if (responseDic[@"success"] && responseDic[@"datasource"])
        {
            id reportModel = responseDic[@"datasource"];
            if ([reportModel isKindOfClass:[NSNull class]]  || [reportModel count] == 0) {
                [ShareFunction hiddenHUD];
                [ShareFunction showToast:@"请求失败,请重试..."];
                return;
            }
            NSDictionary *reportDic = reportModel;
            if ([reportDic[@"sex"] intValue]==2) {
                [SRReportVC gotoMySelf:self withDict:reportDic withType:ReportTypeSexWomen withForm:ExternalTypeDairy];
            }else
            {
                [SRReportVC gotoMySelf:self withDict:reportDic withType:ReportTypeSexMan withForm:ExternalTypeDairy];
            }
            
            
        } else {
            [ShareFunction hiddenHUD];
            [ShareFunction showToast:@"请求失败,请重试..."];
        }
    } errorHandler:^(NSError *error) {
        [ShareFunction hiddenHUD];
        [ShareFunction showToast:@"请求失败,请重试..."];
    }];
    
}
//当天是否记录过
- (BOOL)todayHasEvent:(NSDate*)date
{
    NSString *todayStr = [NSDate dateStringYMDFromDate:date];
    for (NSString *dateStr in _hasArray) {
        if ([dateStr isEqualToString:todayStr]) {
            return YES;
        }
    }
    return NO;
}

#pragma mark ---action
- (void)bt_action_topEvent:(UIButton*)sender
{
    NSInteger index = sender.tag;
    if (index == 1) {              //返回
        [self.navigationController popViewControllerAnimated:YES];
    }
}
- (void)bt_action_icon
{
    if (!ISLOGIN) {
        UIAlertView *alertView = [[UIAlertView alloc]initWithTitle:@"性福轨迹，请先登床" message:nil delegate:self cancelButtonTitle:@"取消 " otherButtonTitles:@"登录", nil];
        [alertView show];
    } else {
        return;
    }
    
}

#pragma mark ---UIAlertView Delegate
-(void)alertView:(UIAlertView *)alertView clickedButtonAtIndex:(NSInteger)buttonIndex
{
    if (buttonIndex==1) {
        [PublicMethod gotoLoginWithVC:self];

    }
}

#pragma mark ---delegate
//子标题
- (NSString *)calendar:(FSCalendar *)calendar subtitleForDate:(NSDate *)date
{
    SSLunarDate* lunarDate = [[SSLunarDate alloc] initWithDate:date calendar:_currentCalendar];
    return lunarDate.dayString;
}
//标记状态
- (BOOL)calendar:(FSCalendar *)calendar hasEventForDate:(NSDate *)date
{
    return [self todayHasEvent:date];
}
/*
 //以后 可滚范围
 - (NSDate *)minimumDateForCalendar:(FSCalendar *)calendar
 {
 }
 //以前 可滚范围
 - (NSDate *)maximumDateForCalendar:(FSCalendar *)calendar
 {
 }
 */

//是否可选择
- (BOOL)calendar:(FSCalendar *)calendar shouldSelectDate:(NSDate *)date
{
    if([self todayHasEvent:date])
    {
        return YES;
    }else
    {
        UIAlertView *alert=[[UIAlertView alloc] initWithTitle:@"提示" message:@"需要记录才能查看分析报告奥！" delegate:nil cancelButtonTitle:@"确定" otherButtonTitles: nil];
        [alert show];
        return NO;
    }
}
//选中后的回调方法
- (void)calendar:(FSCalendar *)calendar didSelectDate:(NSDate *)date
{
    [self getMonthDayWithDate:[NSDate dateStringYMDFromDate:date]];
}
//改变月份
- (void)calendarCurrentMonthDidChange:(FSCalendar *)calendar
{
    NSString* currentMonth = [NSDate dateStringYMFromDate:calendar.currentMonth];
    NSInteger index = [NSDate compareOneDay:calendar.currentMonth withAnotherDay:[NSDate date]];
    if (index == 1) {
        return;
    }
    [self getYearMonthWithDate:currentMonth];
}


#pragma mark ---didReceiveMemoryWarning---
- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
}

#pragma mark ---gotoMyself---
+(void)gotoMySelf:(id)pvc
{
    if (pvc == nil) {
        return;
    }
    
    SRDairyVC* vc = [[SRDairyVC alloc]init];
    vc.hidesBottomBarWhenPushed = YES;
    if ([pvc isKindOfClass:[UINavigationController class]]) {
        [pvc pushViewController:vc animated:YES];
    } else if ([pvc isKindOfClass:[UIViewController class]]) {
        UIViewController *uvc = pvc;
        [uvc.navigationController pushViewController:vc animated:YES];
    }
}
@end
