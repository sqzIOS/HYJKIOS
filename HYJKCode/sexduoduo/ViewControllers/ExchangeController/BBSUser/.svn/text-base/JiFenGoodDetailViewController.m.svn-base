//
//  JiFenGoodDetailViewController.m
//  sexduoduo
//
//  Created by sqz on 14-11-25.
//  Copyright (c) 2014年 dbCode. All rights reserved.
//

#import "JiFenGoodDetailViewController.h"
@interface JiFenGoodDetailViewController ()
{
    NSString *alipayMinPriceStr;
    NSString *huoDaoMinPriceStr;
}
@end

@implementation JiFenGoodDetailViewController

- (id)initWithNibName:(NSString *)nibNameOrNil bundle:(NSBundle *)nibBundleOrNil
{
    self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil];
    if (self) {
        // Custom initialization
        
        alipayMinPriceStr = @"88";
        huoDaoMinPriceStr = @"188";
        
        [self judgeUmengOnline];
    }
    return self;
}

-(void)judgeUmengOnline
{
    //显示的view
    alipayMinPriceStr = @"88";
    NSString* isAlipayMinPriceStr = [MobClick getConfigParams:@"alipayMinPriceStr"];
    if (isAlipayMinPriceStr) {
        alipayMinPriceStr=isAlipayMinPriceStr;
    }
    
    huoDaoMinPriceStr = @"188";
    NSString* isHuoDaoMinPriceStr = [MobClick getConfigParams:@"huoDaoMinPriceStr"];
    if (isHuoDaoMinPriceStr) {
        huoDaoMinPriceStr=isHuoDaoMinPriceStr;
    }
    
}
-(void)dealloc
{
    
}

- (void)viewDidLoad
{
    [super viewDidLoad];
    // Do any additional setup after loading the view from its nib.
    
    if (self.disPlayOne) {
        [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(viewToFront) name:@"displayView0" object:nil];
    }
    if (self.disPlayTwo) {
        [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(viewToFront) name:@"displayView1" object:nil];
    }
    
    if (IOS7_OR_LATER) {
        self.edgesForExtendedLayout = UIRectEdgeNone;
    }
    
    
    self.recommendArray = [NSMutableArray arrayWithCapacity:0];
    _colorArray = [NSMutableArray arrayWithCapacity:0];
    self.imagesArray = [NSMutableArray arrayWithCapacity:0];
    //    [self.imagesArray addObject:[self.goodsDetailDic objectForKey:@"SmallGoodsImagePath"]];
    
    NSDictionary *dic0 = [NSDictionary dictionaryWithObjects:@[@"100",@"新潮TT",@"22.00",@"aaa",@"11"] forKeys:@[@"idNum",@"goodsName",@"price",@"picture",@"goodsNum"]];
    NSDictionary *dic1 = [NSDictionary dictionaryWithObjects:@[@"101",@"女人用具",@"23.00",@"sss",@"12"] forKeys:@[@"idNum",@"goodsName",@"price",@"picture",@"goodsNum"]];
    NSDictionary *dic2 = [NSDictionary dictionaryWithObjects:@[@"102",@"男人器具",@"24.00",@"ddd",@"13"] forKeys:@[@"idNum",@"goodsName",@"price",@"picture",@"goodsNum"]];
    NSDictionary *dic3 = [NSDictionary dictionaryWithObjects:@[@"103",@"夜店战场",@"25.00",@"fff",@"14"] forKeys:@[@"idNum",@"goodsName",@"price",@"picture",@"goodsNum"]];
    
    
    
    goodsArray = [NSMutableArray arrayWithObjects:dic0,dic1,dic2,dic3, nil];
    
    [self setTopNavView];
    
    
    NSDictionary *params = [[NSDictionary alloc]init];
    
    params = @{@"goodId":self.goodsIdStr};
    NSLog(@"params-->%@",params);
    
    [self requestGoodsDetailWithDic:params];
    
    
    // 统计商品详情进入次数
    [MobClick event:@"Goods_Info"];
    
    //包邮提示lab 改内容
    self.baoYouAlertLab.text=[NSString stringWithFormat:@"支付宝满%@包邮，货到付款满%@包邮",alipayMinPriceStr,huoDaoMinPriceStr];
    
}
-(void)viewWillAppear:(BOOL)animated
{
    [super viewWillAppear:animated];
    
    //刷新购物车数目
    int shopCarNum= [[ShopCarObj shareInstance] shopGoodsNum];
    self.numLabel.text = [NSString stringWithFormat:@"%d",shopCarNum];
    
}

-(void)viewDidDisappear:(BOOL)animated
{
    [super viewDidDisappear:animated];
    
    //1。取消网络下载过程
    [opration cancel];
    [oprationTuWen cancel];
   
    opration = nil;
    oprationTuWen=nil;
    

    
}

//顶部NavView
-(void)setTopNavView
{
    int imgY = -20;
    if (IOS7_OR_LATER) {
        imgY = 0;
    }
    
    TopNavView *navView=[[TopNavView alloc] initWithFrame:CGRectMake(0, imgY,SCREEN_WIDTH, 64)];
    [self.view addSubview:navView];
    
    [navView addLeftBtnTarget:self action:@selector(toBackView) forControlEvents:UIControlEventTouchUpInside];
    
    [navView setTitleStr:@"商品详情"];
    
    
    self.shopCarBtn = [UIButton buttonWithType:UIButtonTypeCustom];
    self.shopCarBtn.frame = CGRectMake(273, 20 , 44, 44);
    [self.shopCarBtn setImage:[UIImage imageNamed:@"addShopCarImg.png"] forState:UIControlStateNormal];
    [self.shopCarBtn setImage:[UIImage imageNamed:@"addShopCarImg.png"] forState:UIControlStateSelected];
    [self.shopCarBtn addTarget:self action:@selector(toShopCarView:) forControlEvents:UIControlEventTouchUpInside];
    [navView addSubview:self.shopCarBtn];
    
   
    
    UIImageView *numImg = [[UIImageView alloc] initWithFrame:CGRectMake(295, 22 , 17, 17)];
    [numImg setImage:[UIImage imageNamed:@"numBg.png"]];
    [navView addSubview:numImg];
    
    self.numLabel = [[UILabel alloc] initWithFrame:numImg.frame];
    self.numLabel.font = [UIFont systemFontOfSize:8.0];
    self.numLabel.textColor = WHITE_COLOR;
    self.numLabel.textAlignment = NSTextAlignmentCenter;
    self.numLabel.text = @"0";
    self.numLabel.backgroundColor = [UIColor clearColor];
    [navView addSubview:self.numLabel];
    
    
    
    
}

#pragma mark 商品详情页面
-(void)viewToFront
{
    
    AppDelegate *delegate1 = (AppDelegate*)[UIApplication sharedApplication].delegate;
    [delegate1.tabController hidesTabBar:YES animated:YES];
    
}

#pragma mark 商品规格选择
-(void)initColorChooseView
{

    
    self.colorChooseView.frame = CGRectMake(0, self.primaryView.frame.size.height, self.colorChooseView.frame.size.width, self.colorChooseView.frame.size.height);
    
    UIView *line = [[UIView alloc] initWithFrame:CGRectMake(0, 0, SCREEN_WIDTH, 0.5)];
    line.backgroundColor = [UIColor lightGrayColor];
    [self.colorChooseView addSubview:line];
    
    UIView *popV = [[UIView alloc]initWithFrame:CGRectMake(0, 0,SCREEN_WIDTH, 30)];
    popV.backgroundColor = [UIColor colorWithRed:244/255.f green:244/255.f blue:244/255.f alpha:1.0];
    UIButton *btn = [UIButton buttonWithType:UIButtonTypeCustom];
    [btn setTitle:@"完成" forState:UIControlStateNormal];
    //    [btn setBackgroundImage:[UIImage imageNamed:@"keyboard_down.png"] forState:UIControlStateNormal];
    [btn setTitleColor:[UIColor redColor] forState:UIControlStateNormal];
    [btn addTarget:self action:@selector(goodsNumChoose:) forControlEvents:UIControlEventTouchUpInside];
    btn.frame = CGRectMake(SCREEN_WIDTH-46, 0, 46, 30);
    [popV addSubview:btn];
    self.goodsNumField.inputAccessoryView = popV;// 键盘上面的 输入辅助view
    
    [self.productImg sd_setImageWithURL:[PublicMethod imgWithUrl:[self.goodsDetailDic objectForKey:@"ThumbnailGoodsImagePath"]] placeholderImage:nil];
    self.productPrice.text = [NSString stringWithFormat:@"￥%.2f",[[self.goodsDetailDic objectForKey:@"goods_price"] floatValue]];
    self.productColor.text = [NSString stringWithFormat:@"%@",[self.goodsDetailDic objectForKey:@"name"]];
    
    
    
    self.promptLab = [[UILabel alloc] initWithFrame:CGRectMake(0, STAR_Y, SCREEN_WIDTH, 35)];
    self.promptLab.backgroundColor = [UIColor blackColor];
    self.promptLab.alpha = 0.0;
    self.promptLab.font = [UIFont systemFontOfSize:14.0];
    self.promptLab.textColor = [UIColor whiteColor];
    self.promptLab.textAlignment = NSTextAlignmentCenter;
    [self.view addSubview:self.promptLab];
    
    
}

#pragma mark 收藏商品  取消收藏
-(void)collectGoodsAction
{
    
    
    NSUserDefaults *defaults = [NSUserDefaults standardUserDefaults];
    
    if ([defaults objectForKey:@"isLogin"]) {
        if (collectBtn.selected == YES) {// 取消收藏
            NSDictionary *params = [[NSDictionary alloc]init];
            params = @{@"deleteGoodAppId":[self.goodsDetailDic objectForKey:@"id"],@"deleteMemberAppId":[defaults objectForKey:@"userId"],@"imiestatus":@"1",@"imie":@""};
            
            NSLog(@"params-->%@",params);
            
            [self requestCancelCollectWithDic:params];
        }else//添加收藏
        {
            NSDictionary *params = [[NSDictionary alloc]init];
            params = @{@"goodAppId":[self.goodsDetailDic objectForKey:@"id"],@"memberAppId":[defaults objectForKey:@"userId"],@"imiestatus":@"1",@"imie":@""};
            
            NSLog(@"params-->%@",params);
            
            [self requestAddCollectWithDic:params];
        }
        
    }else
    {
  
        
        if (collectBtn.selected == YES) {// 取消收藏
            NSDictionary *params = [[NSDictionary alloc]init];
            params = @{@"deleteGoodAppId":[self.goodsDetailDic objectForKey:@"id"],@"deleteMemberAppId":@"",@"imiestatus":@"0",@"imie":DEVICEUUID};
            
            NSLog(@"params-->%@",params);
            
            [self requestCancelCollectWithDic:params];
        }else//添加收藏
        {
            NSDictionary *params = [[NSDictionary alloc]init];
            params = @{@"goodAppId":[self.goodsDetailDic objectForKey:@"id"],@"memberAppId":@"",@"imiestatus":@"0",@"imie":DEVICEUUID,@"channel":[NSString stringWithFormat:@"iOS%@",Flag]};
            
            NSLog(@"params-->%@",params);
            
            [self requestAddCollectWithDic:params];
        }
        
    }
    
    
}
#pragma mark 完成购买数量选择
-(void)goodsNumChoose:(id)sender
{
    
    [self.goodsNumField resignFirstResponder];
    [self.numChooseScrol setContentOffset:CGPointMake(0, 0)];
    if ([self.goodsNumField.text intValue] >= 999) {
        self.goodsNumField.text = @"999";
        self.promptLab.text = @"超出范围";
        [self showPromptLab];
    }else if ([self.goodsNumField.text intValue] < 1)
    {
        self.goodsNumField.text = @"1";
        self.promptLab.text = @"超出范围";
        [self showPromptLab];
    }
}
#pragma mark 增加商品数量
- (IBAction)plusGoodsNumAction:(id)sender {
    if ([self.goodsNumField.text intValue] < 999) {
        self.goodsNumField.text = [NSString stringWithFormat:@"%d",[self.goodsNumField.text intValue] + 1];
    }else
    {
        self.promptLab.text = @"超出范围";
        [self showPromptLab];
        
    }
    
}
#pragma mark 减少商品数量
- (IBAction)minusGoodsNumAction:(id)sender {
    if ([self.goodsNumField.text intValue] > 1) {
        self.goodsNumField.text = [NSString stringWithFormat:@"%d",[self.goodsNumField.text intValue] - 1];
        
    }else
    {
        self.promptLab.text = @"超出范围";
        [self showPromptLab];
    }
}

#pragma mark 返回
-(void)toBackView
{
    [self.navigationController popViewControllerAnimated:YES];
}

#pragma mark 选择规格购买
- (IBAction)toBuy:(id)sender {
    NSLog(@"adfasf");
    _goBuyNow = NO;
    self.colorChooseView.hidden = NO;
    
    
    self.primaryView.userInteractionEnabled=NO;
    
    [UIView animateWithDuration:0.3 animations:^{
        self.colorChooseView.frame = CGRectMake(0, self.primaryView.frame.size.height - self.colorChooseView.frame.size.height, self.colorChooseView.frame.size.width, self.colorChooseView.frame.size.height);
        
        CALayer *layer = self.primaryView.layer;
        layer.zPosition = -4000;
        CATransform3D rotationAndPerspectiveTransform = CATransform3DIdentity;
        rotationAndPerspectiveTransform.m34 = 1.0 / -300;
        layer.transform = CATransform3DRotate(rotationAndPerspectiveTransform, 10.0f * M_PI / 180.0f, 1.0f, 0.0f, 0.0f);
        
        self.primaryShadeView.alpha = 0.35;
    } completion:^(BOOL finished) {
        [UIView animateWithDuration:0.3 animations:^{
            self.primaryView.transform = CGAffineTransformMakeScale(0.9, 0.9);
            
            self.primaryShadeView.alpha = 0.5;
        }];
    }];
    
    _goBuyNow = NO;
    
}

#pragma mark 显示提示
-(void)showPromptLab
{
    [UIView animateWithDuration:1.0 delay:0.0 options:UIViewAnimationOptionCurveEaseIn animations:^{self.promptLab.alpha = 0.5;} completion:nil];
    [self performSelector:@selector(dismissPromptLab) withObject:nil afterDelay:1.0];
}
#pragma mark 提示消失
-(void)dismissPromptLab
{
    [UIView animateWithDuration:1.0 delay:1.0 options:UIViewAnimationOptionCurveEaseIn animations:^{self.promptLab.alpha = 0.0;} completion:nil];
}

#pragma mark 确定购买

- (IBAction)sureBuyAction:(id)sender {
    if (self.numIndexColor == 100) {
        self.promptLab.text = @"请选择规格";
        [self showPromptLab];
        
    }else
    {
        [self cancelBuyAction:nil];
        
        NSLog(@"--<>>%@",[_colorArray objectAtIndex:_numIndexColor]);
        
        NSUserDefaults *defaults = [NSUserDefaults standardUserDefaults];
        NSDictionary *params = [[NSDictionary alloc]init];
        
        if (ISLOGIN) {
            params = @{@"userId":[defaults objectForKey:@"userId"],@"productId":[[_colorArray objectAtIndex:_numIndexColor] objectForKey:@"productId"],@"quantity":self.goodsNumField.text};
        }else// 未登录
            params = @{@"userId":@"",@"productId":[[_colorArray objectAtIndex:_numIndexColor] objectForKey:@"productId"],@"quantity":self.goodsNumField.text,@"imiestatus":@"0",@"imie":DEVICEUUID,@"channel":[NSString stringWithFormat:@"iOS%@",Flag]};
        
        
        NSLog(@"params-->%@",self.goodsDetailDic);
        
        
        
        [self requestAddGoodsToShopCarWithDic:params];
        
        
        // 统计购物车
        NSDictionary *dict = @{ @"quantity" :[NSString stringWithFormat:@"%@",self.goodsNumField.text], @"total_price" : [NSString stringWithFormat:@"%.2f",[_colorArray[_numIndexColor][@"price"] floatValue]* [self.goodsNumField.text intValue] ], @"channel" : [NSString stringWithFormat:@"iOS%@",Flag]};
        [MobClick event:@"Add_Cart" attributes:dict];
        NSLog(@"统计购物车=%@",dict);
        
        
        
        //加入购物车动画效果
        __block UIImageView *starView = [[UIImageView alloc] initWithFrame:CGRectMake(0, 100, 60, 60)];
        [UIView animateWithDuration:0.6
                              delay:0.0
                            options:UIViewAnimationOptionCurveLinear
                         animations:^{
                             // grab the imageview using cell
                             UIImageView *imgV = [[UIImageView alloc] init];
                             [imgV sd_setImageWithURL:[PublicMethod imgWithUrl:[self.goodsDetailDic objectForKey:@"ThumbnailGoodsImagePath"]] placeholderImage:nil];
                             
                             imgV.frame = CGRectMake(10, STAR_Y, 80, 80);
                             CGRect rect = [self.view convertRect:imgV.frame toView:self.view];
                             rect = CGRectMake(10,100, 60, 60);
                             NSLog(@"rect is %f,%f,%f,%f",rect.origin.x,rect.origin.y,rect.size.width,rect.size.height);
                             
                   
                             
                             starView = [[UIImageView alloc] initWithImage:imgV.image];
                             [starView setFrame:rect];
                             starView.layer.borderColor = [[UIColor lightGrayColor]CGColor];
                             starView.layer.borderWidth = 0.5;
                             [self.view addSubview:starView];
                             
                             
                             // begin ---- apply position animation
                             CAKeyframeAnimation *pathAnimation = [CAKeyframeAnimation animationWithKeyPath:@"position"];
                             pathAnimation.calculationMode = kCAAnimationPaced;
                             pathAnimation.fillMode = kCAFillModeForwards;
                             pathAnimation.removedOnCompletion = NO;
                             pathAnimation.duration=0.65;
                             pathAnimation.delegate=self;
                             
                             // tab-bar right side item frame-point = end point
                             CGPoint endPoint = CGPointMake(self.shopCarBtn.center.x, self.shopCarBtn.center.y + 20);
                             
                             CGMutablePathRef curvedPath = CGPathCreateMutable();
                             CGPathMoveToPoint(curvedPath, NULL, starView.frame.origin.x, starView.frame.origin.y);
                             CGPathAddCurveToPoint(curvedPath, NULL, starView.frame.origin.x, starView.frame.origin.y, endPoint.x, starView.frame.origin.y, endPoint.x, endPoint.y);
                             pathAnimation.path = curvedPath;
                             CGPathRelease(curvedPath);
                             // end ---- apply position animation
                             
                             // apply transform animation
                             CABasicAnimation *basic=[CABasicAnimation animationWithKeyPath:@"transform"];
                             [basic setToValue:[NSValue valueWithCATransform3D:CATransform3DMakeScale(0.15, 0.15, 0.15)]];
                             [basic setAutoreverses:NO];
                             [basic setDuration:0.65];
                             
                             [starView.layer addAnimation:pathAnimation forKey:@"curveAnimation"];
                             [starView.layer addAnimation:basic forKey:@"transform"];
                             
                         } completion:^(BOOL completion){
                             [starView removeFromSuperview];
                             //                         [self reloadBadgeNumber];
                         }];
        
        if (_goBuyNow) {
            _goBuyNow = NO;
            [self performSelector:@selector(toShopCarView:) withObject:self afterDelay:1.0];
        }
 
    }
}

#pragma mark 取消购买
- (IBAction)cancelBuyAction:(id)sender {
    
    self.primaryView.userInteractionEnabled=YES;
    
    [UIView animateWithDuration:0.3 animations:^{
        CALayer *layer = self.primaryView.layer;
        layer.zPosition = -4000;
        CATransform3D rotationAndPerspectiveTransform = CATransform3DIdentity;
        rotationAndPerspectiveTransform.m34 = 1.0 / 300;
        layer.transform = CATransform3DRotate(rotationAndPerspectiveTransform, -10.0f * M_PI / 180.0f, 1.0f, 0.0f, 0.0f);
        
        self.primaryShadeView.alpha = 0.35;
    } completion:^(BOOL finished) {
        [UIView animateWithDuration:0.3 animations:^{
            self.primaryView.transform = CGAffineTransformMakeScale(1.0, 1.0);
            
            self.primaryShadeView.alpha = 0.0;
            
            self.colorChooseView.frame = CGRectMake(0, self.primaryView.frame.size.height, self.colorChooseView.frame.size.width, self.colorChooseView.frame.size.height);
        }];
    }];
    
    
    [self.goodsNumField resignFirstResponder];
    [self.numChooseScrol setContentOffset:CGPointMake(0, 0) animated:YES];
    
}

#pragma mark 跳转购物车页面
- (IBAction)toShopCarView:(id)sender {

    ShopCarController *controller = [[ShopCarController alloc] initWithNibName:@"ShopCarController" bundle:[NSBundle mainBundle]];
    controller.hidesBottomBarWhenPushed = YES;
    [self.navigationController pushViewController:controller animated:YES];
 
    
}

#pragma mark 联系客服

- (IBAction)toContactAction:(id)sender {
    
    UIWebView*callWebview =[[UIWebView alloc] init];
    NSURL *telURL =[NSURL URLWithString:@"tel:4000003879"];
    [callWebview loadRequest:[NSURLRequest requestWithURL:telURL]];
    //记得添加到view上
    [self.view addSubview:callWebview];
    
}

#pragma mark 立即购买  跳转订单页面
- (IBAction)toBuyNowAction:(id)sender {
    

    [self toBuy:nil];
    _goBuyNow = YES;

}

#pragma mark - 兑换按钮

- (IBAction)exchangeBtnClick:(id)sender {
    
    NSMutableDictionary *dic=[[NSMutableDictionary alloc] init];
    
    [dic setObject:self.goodsDetailDic[@"SmallGoodsImagePath"] forKey:@"SmallGoodsImagePath"];
    [dic setObject:self.goodsDetailDic[@"name"] forKey:@"productName"];
    [dic setObject:[self.goodsDetailDic[@"productDetail"] lastObject][@"productId"] forKey:@"productId"];
    [dic setObject:self.goodsDetailDic[@"isActivities"] forKey:@"isActivities"];// 是否活动商品
    [dic setObject:@"1" forKey:@"quanity"];
    [dic setObject:@"0" forKey:@"totalPrice"];
    [dic setObject:[[NSNull alloc] init] forKey:@"Specifications"];//标准规格
    [dic setObject:self.goodsDetailDic[@"marketPrice"] forKey:@"prestige"];//需要积分
    
//    [dic setObject:@"1" forKey:@"prestige"];//测试需要积分1
    
    NSMutableArray *arr=[NSMutableArray arrayWithObject:dic];
    
    
    OrderViewController *controller = [[OrderViewController alloc] initWithNibName:@"OrderViewController" bundle:[NSBundle mainBundle]];
    controller.hidesBottomBarWhenPushed = YES;
    controller.isJiFenShop=YES;
    controller.orderDetailArray = arr;
    [self.navigationController pushViewController:controller animated:YES];
    
}




#pragma mark - 初始化总的ScrollView
-(void)initDetailScrollView
{
    self.detailScrollView = [[UIScrollView alloc] initWithFrame:CGRectMake(0,STAR_Y,SCREEN_WIDTH, [UIScreen mainScreen].bounds.size.height - STAR_Y - 50 - OFFSET_Y)];
    self.detailScrollView.delegate = self;
    self.detailScrollView.backgroundColor = [UIColor whiteColor];
    [self.primaryView addSubview:self.detailScrollView];
    
    [self.detailScrollView setContentSize:CGSizeMake(SCREEN_WIDTH, 670)];
    
    
    
    [self initTopPicScrollView];
    [self initTitleView];
//    [self initmTableView];
//    [self initBottomPicScrollView];
    
    // 图文详情
    [self initDetailPicView];
    
    [self.detailScrollView setContentSize:CGSizeMake(SCREEN_WIDTH, 330 + topViewH )];
}

#pragma mark  中间商品标题部分
-(void)initTitleView
{
    
    UIView *titleView = [[UIView alloc] initWithFrame:CGRectMake(0, 330,SCREEN_WIDTH, 160)];
    titleView.backgroundColor = [UIColor clearColor];
    [self.detailScrollView addSubview:titleView];
    
    
    int layOutH = 0;
    
    layOutH += 10;
    
    CGSize detailSize = [[self.goodsDetailDic objectForKey:@"name" ] sizeWithFont:[UIFont systemFontOfSize:16.0]
                                                                constrainedToSize:CGSizeMake(SCREEN_WIDTH-20, 60)
                                                                    lineBreakMode:NSLineBreakByWordWrapping];
    //标题
    UILabel *titleLab = [[UILabel alloc] initWithFrame:CGRectMake(10, layOutH, SCREEN_WIDTH-20, detailSize.height)];
    titleLab.backgroundColor = [UIColor clearColor];
    titleLab.text = [NSString stringWithFormat:@"%@",[self.goodsDetailDic objectForKey:@"name" ]];
    titleLab.numberOfLines = 0;
    titleLab.font = [UIFont systemFontOfSize:16.0];
    titleLab.textColor = [UIColor grayColor];
    [titleView addSubview:titleLab];
    
    layOutH = detailSize.height + 5 + layOutH;
    
    // 月销量
    UILabel *numLab = [[UILabel alloc] initWithFrame:CGRectMake(210, layOutH + 5, 100, 20)];
    numLab.backgroundColor = [UIColor clearColor];
    numLab.textColor = [UIColor grayColor];
    numLab.textAlignment = NSTextAlignmentRight;
    numLab.font = [UIFont systemFontOfSize:12.0];
    numLab.text = [NSString stringWithFormat:@"月销量%@件",[self.goodsDetailDic objectForKey:@"salesVolume"]];
    [titleView addSubview:numLab];
    
    UIImageView *duoBiImageView=FastCreatImageView(CGRectMake(10, layOutH+6, 23, 16), UIImageByName(@"JifenDuoBi@2x"));
    [titleView addSubview:duoBiImageView];
    
    CGSize detailPriceSize = [[NSString stringWithFormat:@"%.2f",[[self.goodsDetailDic objectForKey:@"marketPrice"] floatValue]] sizeWithFont:[UIFont boldSystemFontOfSize:20.0]
                                                                                                                              constrainedToSize:CGSizeMake(200, 20)
                                                                                                                                  lineBreakMode:NSLineBreakByWordWrapping];
    
    // 价格
    UILabel *priceLab = [[UILabel alloc] initWithFrame:CGRectMake(33, layOutH + 5, detailPriceSize.width, 20)];
    priceLab.backgroundColor = [UIColor clearColor];
    priceLab.textColor = NAV_RED_COLOR;
    priceLab.font = [UIFont boldSystemFontOfSize:20.0];
    priceLab.text = [NSString stringWithFormat:@"%.f",[[self.goodsDetailDic objectForKey:@"marketPrice"] floatValue] ];
    [titleView addSubview:priceLab];
    
    self.duoBiLab.text=[NSString stringWithFormat:@"%.f多币",[[self.goodsDetailDic objectForKey:@"marketPrice"] floatValue] ];
    
    
    
    layOutH += 35;
    // 包邮提示
    self.detailPayDesView.frame = CGRectMake(0, layOutH, SCREEN_WIDTH, 60);
    [titleView addSubview:self.detailPayDesView];
    
    layOutH += 55;
  
    
    UIView *line = [[UIView alloc] initWithFrame:CGRectMake(0, layOutH,SCREEN_WIDTH, 10)];
    line.backgroundColor = [UIColor colorWithRed:244/255.f green:244/255.f blue:244/255.f alpha:1.0];
    [titleView addSubview:line];
    
    titleView.frame = CGRectMake(0, 330,SCREEN_WIDTH, layOutH + 40);
    
    topViewH = layOutH + 10;
}

#pragma mark  图文  评价   基本参数
-(void)initmTableView
{
    _numberRow = 0;
    self.mTableView = [[UITableView alloc] initWithFrame:CGRectMake(0, 330 + topViewH,SCREEN_WIDTH, 135)];
    self.mTableView.dataSource = self;
    self.mTableView.delegate = self;
    self.mTableView.separatorStyle = UITableViewCellSeparatorStyleNone;
    [self.detailScrollView addSubview:self.mTableView];
    
}


#pragma mark  顶部商品大图scroll
-(void)initTopPicScrollView
{
    // 初始化 scrollview
    self.topPicScrollView = [[UIScrollView alloc] initWithFrame:CGRectMake(0, 0,SCREEN_WIDTH, SCREEN_WIDTH)];
    self.topPicScrollView.bounces = YES;
    self.topPicScrollView.pagingEnabled = YES;
    self.topPicScrollView.delegate = self;
    self.topPicScrollView.userInteractionEnabled = YES;
    self.topPicScrollView.showsHorizontalScrollIndicator = NO;
    self.topPicScrollView.backgroundColor= [UIColor colorWithRed:244/255.f green:244/255.f blue:244/255.f alpha:1.0];
    [self.detailScrollView addSubview:self.topPicScrollView];
    

    

    // 自定义pageControl
    // programmatically add the page control
    self.pageControl = [[DDPageControl alloc] init] ;
    [self.pageControl setCenter: CGPointMake(160, 300)] ;
    [self.pageControl setNumberOfPages: [self.imagesArray count]] ;
    [self.pageControl setCurrentPage: 0] ;
    //    [self.pageControl addTarget: self action: @selector(pageControlClicked:) forControlEvents: UIControlEventValueChanged] ;
    //    [self.pageControl setDefersCurrentPageDisplay: YES] ;
    [self.pageControl setType: DDPageControlTypeOnFullOffEmpty] ;
    [self.pageControl setOnColor: [UIColor colorWithRed:241/255.f green:51/255.f blue:125/255.f alpha:1.0]] ;
    [self.pageControl setOffColor: [UIColor colorWithRed:232/255.f green:232/255.f blue:232/255.f alpha:1.0]] ;
    [self.pageControl setIndicatorDiameter: 4.0f] ;
    [self.pageControl setIndicatorSpace: 10.0f] ;
    [self.detailScrollView addSubview:self.pageControl];
    
    
    [self initContentView];
    
}

#pragma mark  商品详情图
-(void)initContentView
{
    // 初始化 数组 并添加四张图片
    
    self.pageControl.numberOfPages = [self.imagesArray count];
    
    int adsCount = (int)[self.imagesArray count];
  
    for(int i=0;i<adsCount;i++)
    {
        NSString *str=[self.imagesArray objectAtIndex:i];
        
        
        NSURL *url2 = [PublicMethod imgWithUrl:str];
        NSLog(@"urldetail-->%@",url2);
        
        UIImageView *contentImageView = [[UIImageView alloc]initWithFrame:CGRectMake(SCREEN_WIDTH*i + SCREEN_WIDTH, 0,SCREEN_WIDTH, SCREEN_WIDTH)];
        //        [contentImageView setImage:[UIImage imageNamed:str]];
        [contentImageView sd_setImageWithURL:url2 placeholderImage:[UIImage imageNamed:nil]];
        contentImageView.backgroundColor = [UIColor clearColor];
        [self.topPicScrollView addSubview:contentImageView];
        
    }
    if (adsCount <=1)
    {
        self.topPicScrollView.scrollEnabled = NO;
        self.pageControl.hidden = YES;
        
        [self.topPicScrollView setContentSize:CGSizeMake(SCREEN_WIDTH * ([self.imagesArray count] + 2), self.topPicScrollView.frame.size.height)];
        [self.topPicScrollView scrollRectToVisible:CGRectMake(SCREEN_WIDTH,0,SCREEN_WIDTH,self.topPicScrollView.frame.size.height) animated:NO]; // 默认从序号1位置放第1页 ，序号0位置位置放第4页
    }
    else
    {
        self.topPicScrollView.scrollEnabled = YES;
        self.pageControl.hidden = NO;
        self.topPicScrollView.contentSize = CGSizeMake(SCREEN_WIDTH*adsCount, SCREEN_WIDTH);
        self.pageControl.numberOfPages = adsCount;
        
        // 取数组最后一张图片 放在第0页
        UIImageView *imageView = [[UIImageView alloc] init];
        NSString *str=[self.imagesArray objectAtIndex:([self.imagesArray count]-1)];
        NSString *adsImageStr = str;
        NSURL *urlImg=[PublicMethod imgWithUrl:adsImageStr];
        [imageView sd_setImageWithURL:urlImg placeholderImage:[UIImage imageNamed:@"bg.png"]];
        imageView.frame = CGRectMake(0, 0, SCREEN_WIDTH, self.topPicScrollView.frame.size.height); // 添加最后1页在首页 循环
        [self.topPicScrollView addSubview:imageView];
        
        
        // 取数组第一张图片 放在最后1页
        UIImageView *imageView1 = [[UIImageView alloc] init];
        NSString *str1=[self.imagesArray objectAtIndex:0];
        NSURL *urlImg1=[PublicMethod imgWithUrl:str1];
        [imageView1 sd_setImageWithURL:urlImg1 placeholderImage:[UIImage imageNamed:@"bg.png"]];
        imageView1.frame = CGRectMake((SCREEN_WIDTH * ([self.imagesArray count] + 1)) , 0, SCREEN_WIDTH, self.topPicScrollView.frame.size.height); // 添加第1页在最后 循环
        [self.topPicScrollView addSubview:imageView1];
        
        [self.topPicScrollView setContentSize:CGSizeMake(SCREEN_WIDTH * ([self.imagesArray count] + 2), self.topPicScrollView.frame.size.height)]; //  +上第1页和第4页  原理：4-[1-2-3-4]-1
        [self.topPicScrollView setContentOffset:CGPointMake(0, 0)];
        
        [self.topPicScrollView scrollRectToVisible:CGRectMake(SCREEN_WIDTH,0,SCREEN_WIDTH,self.topPicScrollView.frame.size.height) animated:NO]; // 默认从序号1位置放第1页 ，序号0位置位置放第4页
    }
    
    
    
}

- (void)scrollViewDidEndDecelerating:(UIScrollView *)scrollView
{
    CGFloat pagewidth = self.topPicScrollView.frame.size.width;
    int currentPage = floor((self.topPicScrollView.contentOffset.x - pagewidth/ ([self.imagesArray count]+2)) / pagewidth) + 1;
    //    int currentPage_ = (int)self.scrollView.contentOffset.x/SCREEN_WIDTH; // 和上面两行效果一样
    //    NSLog(@"currentPage_==%d",currentPage_);
    if (currentPage == 0)
    {
        [self.topPicScrollView scrollRectToVisible:CGRectMake(SCREEN_WIDTH * [self.imagesArray count],0,SCREEN_WIDTH,self.topPicScrollView.frame.size.height) animated:NO]; // 序号0 最后1页
    }
    else if (currentPage==([self.imagesArray count]+1))
    {
        [self.topPicScrollView scrollRectToVisible:CGRectMake(SCREEN_WIDTH,0,SCREEN_WIDTH,self.topPicScrollView.frame.size.height) animated:NO]; // 最后+1,循环第1页
    }
}

#pragma ScrollViewDelegate
- (void)scrollViewDidScroll:(UIScrollView *)scrollView{
    if (scrollView == self.topPicScrollView)
    {
        CGFloat pagewidth = self.topPicScrollView.frame.size.width;
        int page = floor((self.topPicScrollView.contentOffset.x - pagewidth/([self.imagesArray count] + 2))/pagewidth)+1;
        page --;  // 默认从第二页开始
        self.pageControl.currentPage = page;
        
    }
}



#pragma mark - 商品图文详情 布局及请求
-(void)initDetailPicView
{
    if(self.productDetailView==nil)
    {
        self.productDetailView =[[UIView alloc] initWithFrame:CGRectMake(0, 330 + topViewH, SCREEN_WIDTH, SCREEN_WIDTH)];
        
        [self.detailScrollView addSubview:self.productDetailView];
    }
    
    NSDictionary *params = [[NSDictionary alloc]init];
    params = @{@"goodId":self.goodsIdStr};
    
    oprationTuWen=[[MKHttpServiceEngine shareMyInstance] requestIntroductionimgWithDic:params completionHandler:^(id responseObject) {
        
        NSDictionary *responseDic = responseObject;
        NSLog(@"商品图文详情 detaiDic-->%@",responseDic);
        
        if (responseDic[@"datasource"] && [responseDic[@"datasource"] isKindOfClass:[NSArray class]] && [responseDic[@"datasource"] count]>0) {
            
            
            [self.detailImageStrArray removeAllObjects];
            self.detailImageStrArray = [[NSMutableArray alloc] init];
            [self.detailImageStrArray addObjectsFromArray:responseDic[@"datasource"]];
        }
        
        float begin_y=0;
        for (int i=0; i<self.detailImageStrArray.count; i++) {
            QzImageView *imageView=[[QzImageView alloc] initWithFrame:CGRectMake(0, begin_y, SCREEN_WIDTH, SCREEN_WIDTH)];
            imageView.tag=1000+i;
            imageView.backgroundColor=GRAY_COLOR_BG;
            [self.productDetailView addSubview:imageView];
            begin_y +=SCREEN_WIDTH;
        }
        
        [self downImageWithIndex:0];
        
    } errorHandler:^(NSError *error) {
        
    }];
    
}

-(void)downImageWithIndex:(int)index
{
    if (isBack) {
        return;
    }
    QzImageView *imageView=(QzImageView *)[self.productDetailView viewWithTag:1000+index];
    
    NSURL *imageurl=[PublicMethod imgWithShopXXUrl:self.detailImageStrArray[index]];
    
    [imageView qzSetImageWithURL:imageurl placeholderImage:nil completed:^(UIImage *image, NSError *error, SDImageCacheType cacheType, NSURL *imageURL) {
        
        // 调整位置 并下载下一张图片
        [self downImageOverToFomartLabImageFrameWithIndex:index];
        
        
    }];
}

//图文混排的
-(void)downImageOverToFomartLabImageFrameWithIndex:(int)index
{
    if (isBack) {
        return;
    }
    CGFloat begin_y=0;
    
    for (int i=0; i<self.detailImageStrArray.count; i++) {
        
        QzImageView *imageView=(QzImageView *)[self.productDetailView viewWithTag:1000+i];
        
        if(index>i)//下载图片 前面的图片
        {
            begin_y =CGRectGetMaxY(imageView.frame)+0;
            
        }else if(index == i)//刚下载好的图片
        {
            CGSize imageSize=imageView.image.size;
            
            NSLog(@"imageSize %@  ",NSStringFromCGSize(imageSize));
            CGFloat imageHeight=imageSize.width==0 ? 0 : imageSize.height*SCREEN_WIDTH/imageSize.width;
            
            
            imageView.frame=CGRectMake(0, begin_y, SCREEN_WIDTH,imageHeight );
            
            
            begin_y +=imageHeight +0;
            
            
        }else // 该图片在下载好的图片的下面
        {
            CGRect frame=imageView.frame;
            frame.origin.y=begin_y;
            imageView.frame=frame;
            
            begin_y =CGRectGetMaxY(imageView.frame)+0;
        }
        
    }
    
    //调整headView的高度 和白线的位置
    CGRect frame =self.productDetailView.frame;
    self.productDetailView.frame=CGRectMake(0,frame.origin.y , SCREEN_WIDTH, begin_y+5);
    
    

    [self.detailScrollView setContentSize:CGSizeMake(SCREEN_WIDTH, 330 + topViewH  +begin_y +5)];
    
    
    if (index+1<self.detailImageStrArray.count) {
        //顺序下载 下一张图片
        [self downImageWithIndex:index+1];
    }
    
}



#pragma mark- tableView detegate
- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView;
{
    return 3;
    
}
- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    if (section == 2) {
        return _numberRow;
    }else
        return 0;
    
}


- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath
{
    return basicArray.count * 15;
}
- (CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section
{
    return 45;
}

- (UIView *)tableView:(UITableView *)tableView viewForHeaderInSection:(NSInteger)section
{
    UIView *view = [[UIView alloc] initWithFrame:CGRectMake(0, 0,SCREEN_WIDTH, 45)];
    
    UILabel *lab = [[UILabel alloc] initWithFrame:CGRectMake(20, 10, 100, 21)];
    lab.textColor = [UIColor darkGrayColor];
    lab.font = [UIFont systemFontOfSize:14.0];
    switch (section) {
        case 0:
        {
            lab.text = @"图文详情";
            UIImageView *img = [[UIImageView alloc] initWithFrame:CGRectMake(SCREEN_WIDTH - 35, 15 ,14, 14)];
            [img setImage:[UIImage imageNamed:@"icon_arrows_nor.png"]];
            [view addSubview:img];
        }
            
            break;
        case 1:
        {
            lab.text = @"评价";
            UIImageView *img = [[UIImageView alloc] initWithFrame:CGRectMake(SCREEN_WIDTH - 35, 15 ,14, 14)];
            [img setImage:[UIImage imageNamed:@"icon_arrows_nor.png"]];
            [view addSubview:img];
        }
            
            break;
        case 2:
        {
            lab.text = @"基本参数";
            UIImageView *img = [[UIImageView alloc] initWithFrame:CGRectMake(SCREEN_WIDTH - 35, 15 ,14, 14)];
            if (_numberRow == 0) {
                [img setImage:[UIImage imageNamed:@"icon_arrows_nor.png"]];
            }else
            {
                [img setImage:[UIImage imageNamed:@"icon_arrows_pre.png"]];
            }
            
            [view addSubview:img];
        }
            
            break;
            
        default:
            break;
    }
    [view addSubview:lab];
    
    UIView *line = [[UIView alloc] initWithFrame:CGRectMake(0, 44.5,SCREEN_WIDTH, 0.5)];
    line.backgroundColor = [UIColor blackColor];
    line.alpha = 0.2;
    [view addSubview:line];
    
    UIButton *btn = [UIButton buttonWithType:UIButtonTypeCustom];
    btn.frame = CGRectMake(0, 0,SCREEN_WIDTH, 45);
    btn.backgroundColor = [UIColor clearColor];
    btn.tag = section;
    [btn addTarget:self action:@selector(btnClickAction:) forControlEvents:UIControlEventTouchUpInside];
    [view addSubview:btn];
    
    
    
    
    
    return view;
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    
    static NSString *CellIdentifier = @"GoodsViewCell";
    UITableViewCell *cell = (UITableViewCell *)[tableView dequeueReusableCellWithIdentifier:CellIdentifier];
    if (cell == nil) {
        cell = [[UITableViewCell alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:CellIdentifier];
    }
    
    NSLog(@">>%@",basicParameter);
    cell.backgroundColor = [UIColor whiteColor];
    cell.selectionStyle = UITableViewCellSelectionStyleNone;
    cell.textLabel.text = basicParameter;
    cell.textLabel.textColor = [UIColor lightGrayColor];
    cell.textLabel.font = [UIFont systemFontOfSize:13.0];
    cell.textLabel.numberOfLines = basicArray.count;
    
    //    [cell configCellWithArray:nil];
    
    
    
    
    
    return cell;
    
    
    
}

-(void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
    [tableView deselectRowAtIndexPath:indexPath animated:YES];
    
    
    //    ProductDetailsViewController *controller = [[ProductDetailsViewController alloc] initWithProductInfo:[goodsData objectAtIndex:indexPath.row]];
    //    UINavigationController *navigationController = (UINavigationController*)[UIApplication sharedApplication].delegate.window.rootViewController;
    //    [navigationController pushViewController: controller animated:YES];
    
}



#pragma mark- textField detegate

- (void)textFieldDidBeginEditing:(UITextField *)textField
{
    [self.numChooseScrol setContentOffset:CGPointMake(0, self.numChooseScrol.contentSize.height - 85) animated:YES];
    //    [self.numChooseScrol setContentSize:CGSizeMake(SCREEN_WIDTH, 400)];
}

#pragma mark  商品规格选择 效果设计
#pragma mark- MMGridView detegate
- (void)setupGridView{
    
    self.gridView = [[MMGridView alloc] initWithFrame:CGRectMake(20, 50,  SCREEN_WIDTH-40, 40)];
    self.gridView.backgroundColor = [UIColor whiteColor];
    //    self.gridView.numberOfColumns = 1;
    //    self.gridView.numberOfRows = 5;
    self.gridView.dataSource = self;
    self.gridView.delegate = self;
    [self.numChooseScrol addSubview:self.gridView];
    
    CGSize detailSize = [[[_colorArray firstObject] objectForKey:@"Specifications"] sizeWithFont:[UIFont systemFontOfSize:14.0]
                                                                               constrainedToSize:CGSizeMake( SCREEN_WIDTH-40, 21)
                                                                                   lineBreakMode:NSLineBreakByWordWrapping];
    
    if (detailSize.width > 140) {
        self.gridView.numberOfColumns = 1;
        self.gridView.numberOfRows = self.colorArray.count;
        self.gridView.frame = CGRectMake(20, 50,  SCREEN_WIDTH-40, self.colorArray.count * 40);
        self.goodsNumView.frame = CGRectMake(0, 50 + self.gridView.frame.size.height,SCREEN_WIDTH, 90);
        [self.numChooseScrol setContentSize:CGSizeMake(SCREEN_WIDTH, 140 + self.gridView.frame.size.height)];
    }else if (70 < detailSize.width && detailSize.width < 140) {
        self.gridView.numberOfColumns = 2;
        self.gridView.numberOfRows = self.colorArray.count / 2 + 1;
        self.gridView.frame = CGRectMake(20, 50,  SCREEN_WIDTH-40, (self.colorArray.count / 2 + 1) * 40);
        self.goodsNumView.frame = CGRectMake(0, 50 + self.gridView.frame.size.height,SCREEN_WIDTH, 90);
        [self.numChooseScrol setContentSize:CGSizeMake(SCREEN_WIDTH, 140 + self.gridView.frame.size.height)];
    }else if (0 < detailSize.width && detailSize.width < 70)
    {
        self.gridView.numberOfColumns = 4;
        self.gridView.numberOfRows = self.colorArray.count / 4 + 1;
        self.gridView.frame = CGRectMake(20, 50,  SCREEN_WIDTH-40, (self.colorArray.count / 4 + 1) * 40);
        self.goodsNumView.frame = CGRectMake(0, 50 + self.gridView.frame.size.height,SCREEN_WIDTH, 90);
        [self.numChooseScrol setContentSize:CGSizeMake(SCREEN_WIDTH, 140 + self.gridView.frame.size.height)];
    }
    
    _numIndexColor = 100;
    
    
}


- (NSInteger)numberOfCellsInGridView:(MMGridView *)gridView
{
    return self.colorArray.count;
}


- (MMGridViewCell *)gridView:(MMGridView *)gridView cellAtIndex:(NSUInteger)index
{
    
    MMGridViewDefaultCell *cell = [[MMGridViewDefaultCell alloc] initWithFrame:CGRectNull];
    cell.textLabel.text =  [[self.colorArray objectAtIndex:index] objectForKey:@"Specifications"];
    if (index == _numIndexColor) {
        cell.textLabel.textColor = [UIColor colorWithRed:244/255.f green:45/255.f blue:100/255.f alpha:1.0];
        cell.iconImageVIew.layer.borderColor = [UIColor colorWithRed:244/255.f green:45/255.f blue:100/255.f alpha:1.0].CGColor;
    }
    return cell;
}


#pragma mark - GridView Delegate

- (void)gridView:(MMGridView *)gridView didSelectCell:(MMGridViewCell *)cell atIndex:(NSUInteger)index
{
    NSLog(@"%d",(int)index);
    //    self.searchTextField.text = [_colorArray objectAtIndex:index];
    //    [self cancelSearch];
    _numIndexColor = (int)index;
    [self.gridView reloadData];
    
    NSDictionary *dic = [_colorArray objectAtIndex:index];
    
    self.productPrice.text = [NSString stringWithFormat:@"￥%@",[dic objectForKey:@"price"]];
    self.productColor.text = [NSString stringWithFormat:@"%@",[dic objectForKey:@"Specifications"]];
    
}

- (void)gridView:(MMGridView *)theGridView changedPageToIndex:(NSUInteger)index
{
    
}

#pragma mark MKHttpRequestAction  商品详情
-(void)requestGoodsDetailWithDic:(NSDictionary *)dic
{
    
    self.indicator.hidden = NO;
    
    [self.indicator startAnimating];
    
    
    
    opration = [[MKHttpServiceEngine shareMyInstance] requestGoodsDetailWithDic:dic completionHandler:^(id responseObject) {
        NSDictionary *detaiDic = responseObject;
        NSLog(@"detaiDic-->%@",detaiDic);
        
        self.indicator.hidden = YES;
        
        if ([[detaiDic objectForKey:@"success"] boolValue]== 1) {
            
            self.goodsDetailDic = [[detaiDic objectForKey:@"datasource"] firstObject];
            self.classifyIdStr = [[[detaiDic objectForKey:@"datasource"] firstObject] objectForKey:@"goodsCategoryId"];
            [self initDetailScrollView];
            [self initColorChooseView];
            
            
            //判断该商品是否收藏
            NSLog(@"--》%@..%@",[[AppSet shareInstance] collectArray],[self.goodsDetailDic objectForKey:@"id"]);
            if ([[[AppSet shareInstance] collectArray] containsObject:[self.goodsDetailDic objectForKey:@"id"]]) {
                collectBtn.selected = YES;
            }else
            {
                collectBtn.selected = NO;
            }
            
            
            
            
            //详情广告图
            if (![[[[detaiDic objectForKey:@"datasource"] firstObject]objectForKey:@"imagePath"] isKindOfClass:[NSNull class]]) {
                if ([[[[detaiDic objectForKey:@"datasource"] firstObject]objectForKey:@"imagePath"] count] > 0) {
                    [self.imagesArray removeAllObjects];
                    
                    NSArray *imgArray = [[[detaiDic objectForKey:@"datasource"] firstObject]objectForKey:@"imagePath"];
                    
                    for (NSDictionary *dic in imgArray) {
                        if ([[dic objectForKey:@"gdFlag"] boolValue] == 0) {
                            NSString *imgStr = [NSString stringWithFormat:@"%@/big/%@.%@",[dic objectForKey:@"path"],[dic objectForKey:@"id"],[dic objectForKey:@"sourceImageFormatName"]];
                            [_imagesArray addObject:imgStr];
                        }
                        
                    }
                    
                    [self initContentView];
                }
                
            }
            
            
            //规格选择
            if ([[[[detaiDic objectForKey:@"datasource"] firstObject]objectForKey:@"IsSpecificationEnabled"] boolValue] == 1) {
                isSpecification = YES;
                
                if (![[[[detaiDic objectForKey:@"datasource"] firstObject]objectForKey:@"productDetail"] isKindOfClass:[NSNull class]]) {
                    [_colorArray removeAllObjects];
                    [_colorArray addObjectsFromArray:[[[detaiDic objectForKey:@"datasource"] firstObject]objectForKey:@"productDetail"]];
                }
                
                
                
                
                [self setupGridView];
                
            }else
            {
                //                [self setupGridView];
                if (![[[[detaiDic objectForKey:@"datasource"] firstObject]objectForKey:@"productDetail"] isKindOfClass:[NSNull class]]) {
                    [_colorArray removeAllObjects];
                    
                    NSMutableDictionary *dic = [NSMutableDictionary dictionaryWithDictionary:[[[[detaiDic objectForKey:@"datasource"] firstObject]objectForKey:@"productDetail"] firstObject]];
                    [dic setValue:@"标准规格" forKey:@"Specifications"];
                    
                    [_colorArray addObject:dic];
                    
                    [self setupGridView];
                }
            }
            
            
            //基本参数
            if(![[[[detaiDic objectForKey:@"datasource"] firstObject]objectForKey:@"goodsParams"] isKindOfClass:[NSNull class]])
            {
                NSArray *arry = [[[detaiDic objectForKey:@"datasource"] firstObject]objectForKey:@"goodsParams"];
                basicArray = [NSArray arrayWithArray:arry];
                basicParameter = @"";
                for (NSDictionary *dic in arry) {
                    NSString *str = [NSString stringWithFormat:@"%@:%@",[dic objectForKey:@"id"],[dic objectForKey:@"name"]];
                    basicParameter = [basicParameter stringByAppendingString:[NSString stringWithFormat:@"%@\n",str]];
                }
                
                NSLog(@">>%@",basicParameter);
                [_mTableView reloadData];
                
            }
        }
        
        
        
        
    } errorHandler:^(NSError *error) {
        NSLog(@"error-->%@",error);
        self.indicator.hidden = YES;
        
        self.promptLab.text = @"请检查网络设置!";
        [self showPromptLab];
        
        
    }];
}


#pragma mark 加入收藏

-(void)requestAddCollectWithDic:(NSDictionary *)dic
{
    
    
    
    opration=[[MKHttpServiceEngine shareMyInstance] requestAddCollectWithDic:dic completionHandler:^(id responseObject) {
        NSDictionary *responseDic = responseObject;
        NSLog(@"responseArray-->%@",responseDic);
        
        NSLog(@".-->%@",[self.goodsDetailDic objectForKey:@"id"]);
        
        NSMutableArray *arry = [NSMutableArray arrayWithArray:[[AppSet shareInstance] collectArray]];
        [arry addObject:[self.goodsDetailDic objectForKey:@"id"]];
        [[AppSet shareInstance] setCollectArray:arry];
        [[AppSet shareInstance] saveCollectGoodsData];
        
        self.promptLab.text = [responseDic objectForKey:@"message"];
        [self showPromptLab];
        
        collectBtn.selected = YES;
        
    } errorHandler:^(NSError *error) {
        NSLog(@"error-->%@",error);
        self.promptLab.text = @"请检查网络设置!";
        [self showPromptLab];
        
    }];
}

#pragma mark 删除收藏
-(void)requestCancelCollectWithDic:(NSDictionary *)dic
{
    
    opration=[[MKHttpServiceEngine shareMyInstance] requestCancelCollectWithDic:dic completionHandler:^(id responseObject) {
        NSDictionary *responseDic = responseObject;
        NSLog(@"responseArray-->%@",responseDic);
        
        
        NSMutableArray *arry = [NSMutableArray arrayWithArray:[[AppSet shareInstance] collectArray]];
        [arry removeObject:[self.goodsDetailDic objectForKey:@"id"]];
        [[AppSet shareInstance] setCollectArray:arry];
        [[AppSet shareInstance] saveCollectGoodsData];
        
        self.promptLab.text = [responseDic objectForKey:@"message"];
        [self showPromptLab];
        
        collectBtn.selected = NO;
        
    } errorHandler:^(NSError *error) {
        NSLog(@"error-->%@",error);
        self.promptLab.text = @"请检查网络设置!";
        [self showPromptLab];
        
        
    }];
}


#pragma mark 加入购物车
-(void)requestAddGoodsToShopCarWithDic:(NSDictionary *)dic
{
    
    opration=[[MKHttpServiceEngine shareMyInstance] requestAddGoodsToShopCarWithDic:dic completionHandler:^(id responseObject) {
        NSDictionary *responseDic = responseObject;
        NSLog(@"responseArray-->%@",responseDic);
        
        self.promptLab.text = [responseDic objectForKey:@"message"];
        [self showPromptLab];
        
        [self requestShopCarList];
        
        
    } errorHandler:^(NSError *error) {
        NSLog(@"error-->%@",error);
        
        self.promptLab.text = @"请检查网络设置!";
        [self showPromptLab];
        
    }];
}



#pragma ShopCarRequest  购物车

-(void)requestShopCarList
{
    
    NSDictionary *params = [[NSDictionary alloc]init];
    if (ISLOGIN) {
        params = @{@"userId":USERID,@"pageApp":@"1",@"pageSizeApp":@"100"};
    }else
        params = @{@"userId":@"",@"pageApp":@"1",@"pageSizeApp":@"100",@"imiestatus":@"0",@"imie":DEVICEUUID};
    
    
    
    [[MKHttpServiceEngine shareMyInstance] requestShopCarListWithDic:params completionHandler:^(id responseObject) {
        NSDictionary *responseDic = responseObject;
        NSLog(@"detaiDic-->%@",responseDic);
        
        if ([[responseDic objectForKey:@"success"] boolValue]) {
            
            
            self.numLabel.text = [NSString stringWithFormat:@"%d",(int)[[responseDic objectForKey:@"datasource"] count]];
            
            NSMutableArray *numArray = [NSMutableArray arrayWithCapacity:0];
            NSArray *arry = [NSArray arrayWithArray:[responseDic objectForKey:@"datasource"]];
            for (NSDictionary *dic in arry) {
                [numArray addObject:[dic objectForKey:@"productId"]];
            }
            [[AppSet shareInstance] setShopCarNumArray:numArray];
            
        }else
        {
            
            
        }
        
        
        
        
    } errorHandler:^(NSError *error) {
        
        
    }];
}








- (void)didReceiveMemoryWarning
{
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

@end
