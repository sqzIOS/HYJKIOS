//
//  RankingBaseViewController.m
//
//
//  Created by apple on 15/12/4.
//
//

#import "RankingBaseViewController.h"
#import "ShareFunction.h"
#import "RankingTopView.h"
#import "RankingCell.h"
#import "RankingModel.h"
#import "UIView+Extend.h"
#import "AFHTTPClient.h"
#import "AFNetworking.h"
#import "MJRefresh.h"

@interface RankingBaseViewController ()


@end

@implementation RankingBaseViewController

- (void)viewDidLoad
{
    [super viewDidLoad];
    
    [self.tableView setHeight:[UIScreen mainScreen].bounds.size.height - QZMake(64)];
    self.tableView.showsVerticalScrollIndicator = NO;
    self.tableView.separatorStyle = UITableViewCellSeparatorStyleNone;
    [self.tableView clearDefaultLineByAddFootLine];
    
    UILabel *tipLabel = [[UILabel alloc] initWithFrame:CGRectMake(0, 0, SCREEN_WIDTH, SCREEN_HEIGHT - 64)];
    self.tipLabel = tipLabel;
    tipLabel.backgroundColor = RGBCOLOR(240, 240, 240);
    tipLabel.text = @"暂无数据";
    
    
    tipLabel.textColor = RGBCOLOR(200, 200, 200);
    tipLabel.textAlignment = NSTextAlignmentCenter;
    tipLabel.font = [UIFont systemFontOfSize:QZMake(40)];
    tipLabel.hidden = YES;
    [self.view addSubview:tipLabel];
    
    // 添加上下拉刷新
    [self setRefresh];
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section {
    return self.dataArry.count;
}

- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath
{
    return QZMake(70);
}

- (NSMutableArray *)dataArry
{
    if (_dataArry == nil) {
        _dataArry = [[NSMutableArray alloc] init];
    }
    return  _dataArry;
}

- (void)setRefresh
{
    [self.tableView addHeaderWithTarget:self action:@selector(reLoadDate)];
    [self.tableView addFooterWithTarget:self action:@selector(loadDate)];
}

- (void)endRefreshing
{
    [self.tableView footerEndRefreshing];
    [self.tableView headerEndRefreshing];
    self.tableView.headerRefreshingText = @"正在刷新数据...";
    self.tableView.footerRefreshingText = @"正在加载更多数据...";
}

- (void)reLoadDate
{
    self.reload = YES;
    [self loadDate];
}

// 获取数据
- (void)loadDate
{
    NSString *path = self.path;
    NSString *host = @"http://bbs.xingduoduo.com:8080/";
    NSMutableDictionary *params = self.params;
    
    int pageNo = 1;
    
    if (self.reload == NO) {
        pageNo = self.dataArry.count / 10 + 1;
        if (self.dataArry.count % 10 != 0) {
            pageNo ++ ;
        }
    }
    [params setValue:[NSString stringWithFormat:@"%d",pageNo] forKey:@"pageNo"];
    [AFHTTPClient getJSONPath:path httpHost:host params:params success:^(id json) {
        if (self.reload == YES) {
            [self.dataArry removeAllObjects];
            [self setTop];
        }
        NSDictionary *data = [NSJSONSerialization JSONObjectWithData:json options:NSJSONReadingAllowFragments error:nil];
        NSArray *dataArry = data[@"datasource"];
        if (dataArry == nil || [dataArry isKindOfClass:[NSNull class]] || dataArry.count == 0) {
            if (self.dataArry.count == 0) {
                self.tipLabel.hidden = NO;
            } else {
                [ShareFunction showToast:@"暂无更多数据"];
            }
            [self endRefreshing];
            return ;
        }
        [ShareFunction showToast:@"刷新成功"];
        for (int i = 0; i < dataArry.count; i++) {
            NSDictionary *datasource = dataArry[i];
            RankingModel *model = [RankingModel rankingModelWithDict:datasource];
            [self.dataArry addObject:model];
        }
        
        [self.tableView reloadData];
        self.reload = NO;
        [self endRefreshing];
    } fail:^{
        self.tipLabel.hidden = NO;
        [self endRefreshing];
        [self.tableView reloadData];
    }];
}

- (void)setTop
{
    
}

#pragma mark - tableViewDateSourse
- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    self.tipLabel.hidden = YES;
    self.tableView.separatorStyle = UITableViewCellSeparatorStyleSingleLine;
    RankingModel *model = self.dataArry[indexPath.row];
    RankingCell *cell = [RankingCell rankingCellWithModel:model inTableView:tableView];
    return cell;
}


@end
