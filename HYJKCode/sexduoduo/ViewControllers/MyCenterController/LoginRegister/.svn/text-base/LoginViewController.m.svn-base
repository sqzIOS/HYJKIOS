//
//  LoginViewController.m
//  sexduoduo
//
//  Created by Showm on 14-6-25.
//  Copyright (c) 2014年 dbCode. All rights reserved.
//

#import "LoginViewController.h"


@interface LoginViewController ()

@end

@implementation LoginViewController

- (id)initWithNibName:(NSString *)nibNameOrNil bundle:(NSBundle *)nibBundleOrNil
{
    self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil];
    if (self) {
        // Custom initialization
    }
    return self;
}

- (void)viewDidLoad
{
    [super viewDidLoad];
    // Do any additional setup after loading the view from its nib.
    
    
    [self setTopNavView];
    
    
    self.loginView.frame = CGRectMake(0, STAR_Y,SCREEN_WIDTH, [UIScreen mainScreen].bounds.size.height - STAR_Y);
    
    self.promptLab = [[UILabel alloc] initWithFrame:CGRectMake(0, 0, SCREEN_WIDTH, 35)];
    self.promptLab.backgroundColor = [UIColor blackColor];
    self.promptLab.alpha = 0.0;
    self.promptLab.font = [UIFont systemFontOfSize:14.0];
    self.promptLab.textColor = [UIColor whiteColor];
    self.promptLab.textAlignment = NSTextAlignmentCenter;
    [self.loginView addSubview:self.promptLab];

    self.loginBtn.backgroundColor = colorWith01;
    self.loginBtn.layer.cornerRadius = 5.;
    self.loginBtn.layer.masksToBounds = YES;
}

//顶部NavView
-(void)setTopNavView
{
    int imgY = -20;
    if (IOS7_OR_LATER) {
        imgY = 0;
    }
    
    TopNavView *navView=[[TopNavView alloc] initWithFrame:CGRectMake(0, imgY,SCREEN_WIDTH, 64)];
    [self.view addSubview:navView];
    
//    [navView addLeftBtnTarget:self action:@selector(toBackView) forControlEvents:UIControlEventTouchUpInside];
    
//    [navView setTitleStr:@"登录"];
    
    UILabel *titleImgV = [[UILabel alloc] initWithFrame:CGRectMake(60, 30, SCREEN_WIDTH-120, 38*2/3.)];
    titleImgV.backgroundColor = [UIColor clearColor];
    titleImgV.textColor = colorWith01;
    titleImgV.textAlignment = NSTextAlignmentCenter;
    titleImgV.font = [UIFont systemFontOfSize:20.0f];
    titleImgV.text = @"登录"; 
    [navView addSubview:titleImgV];
    
    //
    UIButton *leftBtn = [UIButton buttonWithType:UIButtonTypeCustom];
    leftBtn.frame = CGRectMake(0, 20, 64, 44);
    [leftBtn setImage:[UIImage imageNamed:@"health_navBack"] forState:UIControlStateNormal];
    [leftBtn addTarget:self action:@selector(toBackView) forControlEvents:UIControlEventTouchUpInside];
    [navView addSubview:leftBtn];
    
    _indicator = [[UIActivityIndicatorView alloc] initWithActivityIndicatorStyle:UIActivityIndicatorViewStyleWhite];
    _indicator.frame = CGRectMake(SCREEN_WIDTH - 42, 25 , 32, 32);
    [navView addSubview:_indicator];
    _indicator.hidden = YES;
}


//返回
-(void)toBackView
{
    [self.navigationController popViewControllerAnimated:YES];

}



- (IBAction)loginBtnAction:(id)sender {

    if (self.phoneField.text.length < 1) {
        UIAlertView *alert = [[UIAlertView alloc] initWithTitle:nil message:@"请输入用户名!" delegate:nil cancelButtonTitle:@"确定" otherButtonTitles: nil];
        [alert show];
    }else if(self.passWordField.text.length < 1 )
    {
        UIAlertView *alert = [[UIAlertView alloc] initWithTitle:nil message:@"请输入密码!" delegate:nil cancelButtonTitle:@"确定" otherButtonTitles: nil];
        [alert show];
    }else
    {
        [self.phoneField resignFirstResponder];
        [self.passWordField resignFirstResponder];
        
        NSDictionary *params = [[NSDictionary alloc]init];
        
        params = @{@"verappusername":self.phoneField.text,@"verapppawss":self.passWordField.text,@"imie":DEVICEUUID};
        
        [self requestWithUserLoginWithDic:params];
    }

}

- (IBAction)toFindMyPassWord:(id)sender {
    
}

- (IBAction)toRegisterView:(id)sender {
    RegisterViewController *ctrVc = [[RegisterViewController alloc]initWithNibName:@"RegisterViewController" bundle:[NSBundle mainBundle]];
    ctrVc.hidesBottomBarWhenPushed = YES;
    [self.navigationController pushViewController:ctrVc animated:YES];
}


- (IBAction)forgetPassword:(id)sender {
    
    ForgetPasswordVC *vc=[[ForgetPasswordVC alloc] initWithNibName:@"ForgetPasswordVC" bundle:[NSBundle mainBundle]];
    vc.hidesBottomBarWhenPushed=YES;
    [self.navigationController pushViewController:vc animated:YES];
    
    
}




#pragma mark - TextField Delegate
- (BOOL)textFieldShouldBeginEditing:(UITextField *)textField
{
    return YES;
}
- (BOOL)textFieldShouldEndEditing:(UITextField *)textField
{
    return YES;
}
-(BOOL)textFieldShouldReturn:(UITextField *)textField {
    if (textField == self.phoneField) {
        [self.passWordField becomeFirstResponder];
    }else
        [textField resignFirstResponder];
    
    
    return YES;
}
- (BOOL)textField:(UITextField *)textField shouldChangeCharactersInRange:(NSRange)range replacementString:(NSString*)string{
    
    // 不能输入表情
    if ([[[UITextInputMode currentInputMode]primaryLanguage] isEqualToString:@"emoji"]) {
        return NO;
    }
    return YES;
}

#pragma LoginRequest

-(void)requestWithUserLoginWithDic:(NSDictionary *)dic
{
    self.indicator.hidden = NO;
    [self.indicator startAnimating];
    
    [ShareFunction showHUDWithText:@"登陆中..."];
    
    [[MKHttpServiceEngine shareMyInstance] requestUserLoginWithDic:dic completionHandler:^(id responseObject) {
        NSDictionary *responseDic = responseObject;
        NSLog(@"detaiDic-->%@",responseDic);
        
        
        self.indicator.hidden = YES;
        [self.indicator stopAnimating];
        
        
        if ([[responseDic objectForKey:@"success"] boolValue]) {
            NSDictionary *userDic=[responseDic[DATASOURCE] lastObject];

            
            NSUserDefaults *defaults = [NSUserDefaults standardUserDefaults];
            [defaults setBool:1 forKey:@"isLogin"];
            [defaults setValue:self.phoneField.text forKey:@"userName"];
            [defaults setValue:self.passWordField.text forKey:@"password"];
            [defaults setValue:[userDic objectForKey:@"userId"] forKey:@"userId"];
            
            if (![userDic[@"gender"] isKindOfClass:[NSNull class]]) {
                if ([userDic[@"gender"] isEqualToString:@"female"]) {
                     [defaults setValue:@"女" forKey:@"userSex"];
                }else [defaults setValue:@"男" forKey:@"userSex"];
            }else [defaults setValue:@"男" forKey:@"userSex"];

            // 昵称
            if (![userDic[@"nickname"] isKindOfClass:[NSNull class]]) {
                    [defaults setValue:userDic[@"nickname"] forKey:@"nickname"];
                
            }
            
            
            //是否是医师
            if (![userDic[@"isDoctor"] isKindOfClass:[NSNull class]]  && [userDic[@"isDoctor"] intValue]==1) {
                
                [defaults setBool:1 forKey:@"isDoctor"];
                [defaults setObject:[NSString stringWithFormat:@"%@",userDic[@"doctorId"]] forKey:@"doctorId"];
                [defaults setObject:[NSString stringWithFormat:@"%@",userDic[@"doctorName"]] forKey:@"doctorName"];
            }else
            {
                [defaults removeObjectForKey:@"isDoctor"];
                [defaults removeObjectForKey:@"doctorId"];
                [defaults removeObjectForKey:@"doctorName"];
            }
            
            
            
            
           // 论坛id
            if (![userDic[@"user_id"] isKindOfClass:[NSNull class]]) {
               [defaults setValue:[userDic objectForKey:@"user_id"] forKey:@"BBSId"];
            }
            
            // 头像地址
            if (userDic[@"newHead_image"] ){
                
                //下载头像并保存本地
                NSString *headURL=[NSString stringWithFormat:@"%@",userDic[@"newHead_image"]];
                [UserDefaults setObject:headURL forKey:@"userHeadImageURL"];
                
                dispatch_async(dispatch_get_global_queue(0, 0), ^{
                    UIImage *image=[PublicMethod downloadImageWithURL:headURL];
                    
                    dispatch_async(dispatch_get_main_queue(), ^{
                        NSLog(@"下载头像结束");
                        if (image) {
                            [PublicMethod saveImage:image WithName:USERID];
                        }
                        
                    });
                    
                });
            }
            
            // 医师头像
            if (userDic[@"doctorHead"] ){
                
                //下载头像并保存本地
                NSString *headURL=[NSString stringWithFormat:@"%@",userDic[@"doctorHead"]];
                [UserDefaults setObject:headURL forKey:@"doctorHeadImageURL"];
                
                dispatch_async(dispatch_get_global_queue(0, 0), ^{
                    UIImage *image=[PublicMethod downloadImageWithURL:headURL];
                    
                    dispatch_async(dispatch_get_main_queue(), ^{
                        NSLog(@"下载头像结束");
                        if (image) {
                            [PublicMethod saveImage:image WithName:DOCTORID];
                        }
                        
                    });
                    
                });
            }
            
            //会员等级
            if (![userDic[@"rankNmae"] isKindOfClass:[NSNull class]])
            {
                [defaults setValue:[userDic objectForKey:@"rankNmae"] forKey:@"rankNmae"];
            }
            
            [defaults synchronize];
            
            self.promptLab.text = [responseDic objectForKey:@"message"];
            [self showPromptLab];
            
            // 登录后的一些操作
            [SDUserManager userLoginOperation];
            
            
            // 获取论坛个人信息
            [self requestExchangeInfo];
            [self performSelector:@selector(toBackView) withObject:self afterDelay:0.5];

            
            
        }else
        {
            self.promptLab.text = [responseDic objectForKey:@"message"];
            [self showPromptLab];
        }
        
        
        // 获得论坛消息数目
        [m_appDelegate checkMessageNum];
        
        [ShareFunction hiddenHUD];
    } errorHandler:^(NSError *error) {
        NSLog(@"error-->%@",error);
        
        self.indicator.hidden = YES;
        [self.indicator stopAnimating];
        
        self.promptLab.text = @"登录失败!";
        [self showPromptLab];
        
        [ShareFunction hiddenHUD];
    }];
}


#pragma mark 获取论坛个人信息
-(void)requestExchangeInfo
{
    //获得论坛个人信息
    [[MKHttpExchangeDemo shareMyInstance] requestExchangeUserInfoCompletionHandler:^(id responseObject) {
        
        NSDictionary *dic=(NSDictionary *)responseObject;
        if ([dic[@"success"] intValue]==1) {
            
            NSDictionary *userInfo=[dic[@"datasource"] objectAtIndex:0];
            
            NSString *userLevel = @"LV* ***";
            
            if (userInfo) {
                NSString *str=[NSString stringWithFormat:@"LV%@ %@",userInfo[@"groupId"],userInfo[@"groupName"]];
                userLevel = str;
            }
            
            
            // 用户等级信息
            [UserDefaults setValue:userLevel forKey:@"BBSUserLevel"];
            
            [UserDefaults setValue:userInfo[@"groupId"] forKey:@"BBSUserLevelNumber"];
            
            //个人积分
            if (userInfo[@"prestige"] && ![userInfo[@"prestige"] isKindOfClass:[NSNull class]]) {
                
                [UserDefaults setValue:userInfo[@"prestige"] forKey:@"prestige"];
            }
            
        }
        
        
        
        [[NSNotificationCenter defaultCenter] postNotificationName:NOTIFICATION_ISLOGIN object:nil];
        [[NSNotificationCenter defaultCenter] postNotificationName:@"updateMyCenterView" object:nil];
        
    } errorHandler:^(NSError *error) {
        
    }];
}



//显示提示
-(void)showPromptLab
{
    [UIView animateWithDuration:1.0 delay:0.0 options:UIViewAnimationOptionCurveEaseIn animations:^{self.promptLab.alpha = 0.6;} completion:nil];
    [self performSelector:@selector(dismissPromptLab) withObject:nil afterDelay:0.0];
}
//提示消失
-(void)dismissPromptLab
{
    [UIView animateWithDuration:1.0 delay:1.0 options:UIViewAnimationOptionCurveEaseIn animations:^{self.promptLab.alpha = 0.0;} completion:nil];
}


- (void)didReceiveMemoryWarning
{
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

@end
