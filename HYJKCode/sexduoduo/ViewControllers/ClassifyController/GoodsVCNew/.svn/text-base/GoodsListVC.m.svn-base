//
//  GoodsListVC.m
//  sexduoduo
//
//  Created by showm on 15/7/14.
//  Copyright (c) 2015年 dbCode. All rights reserved.
//

#import "GoodsListVC.h"
#import "LeveyTabBarController.h"
#import "GoodsViewCell2.h"

#define goodsTopViewHeight 40
@interface GoodsListVC ()
{
    BOOL showTypeIsLine;//显示方式 是否是行
    
    
    // top 排序 分类 显示方式 按钮
    UIButton *paiXuBtn;
    UIButton *fenLeiBtn;
    UIButton *showTypeBtn;
    
    UIImageView *paiXuRightImage;
    UIImageView *fenLeiRightImage;
    
    //
    UIView *paiXuView;
    UIScrollView *fenLeiView;
    
    UISegmentedControl *paiXuSegmentedControl;
    
    UIButton *zhBtn;
    UIButton *xlBtn;
    UIButton *sjBtn;
    UIButton *jgBtn;
    
    
    MMGridView * gridView;
    int _numIndexColor;
    
    
}
@end

@implementation GoodsListVC

@synthesize classifyStr;


- (id)initWithNibName:(NSString *)nibNameOrNil bundle:(NSBundle *)nibBundleOrNil
{
    self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil];
    if (self) {
        // Custom initialization
        
        showTypeIsLine=YES;
        
        _numIndexColor=100;
    }
    return self;
}
- (void)dealloc
{
    
}

- (void)viewDidLoad
{
    [super viewDidLoad];
    // Do any additional setup after loading the view from its nib.
   
    goodsDataArray = [NSMutableArray arrayWithCapacity:0];
    
    currentPage = 1;
    isAscSort = 1;
    sortType = comprehensiveType;
    
    [self setTopNavView];
    
    [self initSegment];
    [self initGoodsTableView];
    
    /*
     typedef enum _theRequestType {
     searchGoodsType = 0,    //搜索
     homeViewType,           //首页 专区
     classifyType,           //分类
     collectType,            //收藏
     brandStreet,            //品牌街
     } theRequestType;
     */
    
    if (self.requestType == searchGoodsType) {//搜索
        NSDictionary *params = [[NSDictionary alloc]init];
        
        params = @{@"serachName":self.searchStr,@"pageSizeApp":@"10",@"pageApp":[NSString stringWithFormat:@"%d",currentPage]};
        
        [self requestSearchGoodsWithDic:params];
        
    }else if (self.requestType == homeViewType)//首页 专区
    {
        NSDictionary *params = [[NSDictionary alloc]init];
        
        params = @{@"pageSizeApp":@"10",@"pageApp":[NSString stringWithFormat:@"%d",currentPage],@"sortType":self.classifyStr};
        
        [self requestGoodListWithDic:params];
        
    }else if (self.requestType == classifyType)// 分类
    {
        if (sortType == comprehensiveType) {
            NSDictionary *params = [[NSDictionary alloc]init];
            
            params = @{@"pageSizeApp":@"10",@"pageApp":[NSString stringWithFormat:@"%d",currentPage],@"categoryId":self.classifyId,@"sorting":@"desc"};
            
            [self requestSortClassifyGoodsListWithDic:params withSortPath:@"goods!getGoodsAppByCompre.action"];
        }
    }else if (self.requestType == collectType)// 收藏
    {
        
        self.noCollectView.frame=CGRectMake(0, STAR_Y, SCREEN_WIDTH, SCREEN_HEIGHT-STAR_Y);
        [self.view addSubview:self.noCollectView];
        
        NSDictionary *params = [[NSDictionary alloc]init];
        
        if(ISLOGIN)
        {
            params = @{@"UID":USERID,@"pageSizeApp":@"10",@"pageApp":[NSString stringWithFormat:@"%d",currentPage]};
        }else params = @{@"UID":@"",@"imiestatus":@"0",@"imie":DEVICEUUID,@"pageSizeApp":@"10",@"pageApp":[NSString stringWithFormat:@"%d",currentPage]};
        
        
        [self requestCollectListWithDic:params];
    }else if(self.requestType == brandStreet)//品牌街
    {
        NSDictionary *params = [[NSDictionary alloc]init];
        
        params = @{@"pageSizeApp":@"10",@"pageApp":[NSString stringWithFormat:@"%d",currentPage],@"brandId":self.classifyStr};
        
        [self requestBrandStreetWithDic:params];
    }
    
    
}


-(void)viewWillAppear:(BOOL)animated
{
    [super viewWillAppear:animated];
    
    //设置segment的title的选中的属性 相应的也可以设置其他状态的属性
    NSDictionary *textAttibutesSelected = [NSDictionary dictionaryWithObjectsAndKeys:
                                           [UIFont fontWithName:k_Font size:16],UITextAttributeFont,
                                           NAV_COLOR,UITextAttributeTextColor,
                                           NAV_RED_COLOR,UITextAttributeTextShadowColor,
                                           [NSValue valueWithCGSize:CGSizeMake(0, 0)],UITextAttributeTextShadowOffset,nil];
    [[UISegmentedControl appearance] setTitleTextAttributes:textAttibutesSelected
                                                   forState:UIControlStateSelected];
}

-(void)showNoCollectView:(BOOL)isshow
{
    if (isshow) {
        self.noCollectView.hidden=NO;
    }else self.noCollectView.hidden=YES;
    
}

//顶部NavView
-(void)setTopNavView
{
    int imgY = -20;
    if (IOS7_OR_LATER) {
        imgY = 0;
    }
    
    TopNavView *navView=[[TopNavView alloc] initWithFrame:CGRectMake(0, imgY,SCREEN_WIDTH, 64)];
    [self.view addSubview:navView];
    
    [navView addLeftBtnTarget:self action:@selector(toBackView) forControlEvents:UIControlEventTouchUpInside];
    
    [navView setTitleStr:_titleStr];
    
    
    //行 和 宫格方式切换
//    UIButton *rightBtn = [UIButton buttonWithType:UIButtonTypeCustom];
//    rightBtn.frame = CGRectMake(SCREEN_WIDTH - 42, 25 , 32, 32);
//    
//    if (showTypeIsLine) {
//        [rightBtn setImage:[UIImage imageNamed:@"classifyType2"] forState:UIControlStateNormal];
//    }else [rightBtn setImage:[UIImage imageNamed:@"classifyType1"] forState:UIControlStateNormal];
//    
//    [rightBtn addTarget:self action:@selector(changeShowType:) forControlEvents:UIControlEventTouchUpInside];
//    [navView addSubview:rightBtn];
}

-(void)changeShowType:(UIButton *)sender
{
    if (showTypeIsLine) {
        showTypeIsLine=NO;
        [sender setImage:[UIImage imageNamed:@"classifyType1"] forState:UIControlStateNormal];
    }else
    {
        showTypeIsLine=YES;
        [sender setImage:[UIImage imageNamed:@"classifyType2"] forState:UIControlStateNormal];
    }
    if (IOS7_OR_LATER) {
        if(showTypeIsLine)
        {
            [self.goodsTableView setSeparatorInset:UIEdgeInsetsMake(0,SCREEN_WIDTH/2-16.,0,0)];
        }else
            [self.goodsTableView setSeparatorInset:UIEdgeInsetsZero];
    }
    
    [self.goodsTableView reloadData];
}

-(void)initGoodsTableView
{
    
    self.goodsTableView = [[UITableView alloc] initWithFrame:CGRectMake(0, STAR_Y+goodsTopViewHeight,SCREEN_WIDTH, [UIScreen mainScreen].bounds.size.height - STAR_Y-goodsTopViewHeight)];
    self.goodsTableView.dataSource = self;
    self.goodsTableView.delegate = self;
    if (IOS7_OR_LATER) {
        if(showTypeIsLine)
        {
            [self.goodsTableView setSeparatorInset:UIEdgeInsetsMake(0,SCREEN_WIDTH/2-16.,0,0)];
        }else
            [self.goodsTableView setSeparatorInset:UIEdgeInsetsZero];
    }
    self.goodsTableView.backgroundColor = [UIColor clearColor];
    [self.view addSubview:self.goodsTableView];
    
    UIView *line = [[UIView alloc] initWithFrame:CGRectMake(0, 0, SCREEN_WIDTH, 0.5)];
    line.backgroundColor = [UIColor lightGrayColor];
    self.goodsTableView.tableFooterView = line;
    

    
    // 1.下拉刷新
    
    [self.goodsTableView addHeaderWithTarget:self action:@selector(headerRereshing)];
    

    
    
    //  update the last update date
    //	[_refreshHeaderView refreshLastUpdatedDate];
    
    
    self.promptLab = [[UILabel alloc] initWithFrame:CGRectMake(0, STAR_Y, SCREEN_WIDTH, 35)];
    self.promptLab.backgroundColor = [UIColor blackColor];
    self.promptLab.alpha = 0.0;
    self.promptLab.font = [UIFont systemFontOfSize:14.0];
    self.promptLab.textColor = [UIColor whiteColor];
    self.promptLab.textAlignment = NSTextAlignmentCenter;
    [self.view addSubview:self.promptLab];
    
}

-(void)headerRereshing
{
    
//    [self.scrollView refrashData];
    [self performSelector:@selector(hearderRereshingEnd) withObject:nil afterDelay:2.0];
    
    currentPage = 1;
    if (self.requestType == searchGoodsType) {
        NSDictionary *params = [[NSDictionary alloc]init];
        
        params = @{@"serachName":self.searchStr,@"pageSizeApp":@"10",@"pageApp":[NSString stringWithFormat:@"%d",currentPage]};
        
        [self requestSearchGoodsWithDic:params];
        
    }else if (self.requestType == homeViewType)
    {
        NSDictionary *params = [[NSDictionary alloc]init];
        
        params = @{@"pageSizeApp":@"10",@"pageApp":[NSString stringWithFormat:@"%d",currentPage],@"sortType":self.classifyStr};
        
        [self requestGoodListWithDic:params];
    }else if (self.requestType == classifyType)
    {
        if (sortType == comprehensiveType) {
            currentPage = 1;
            
            NSDictionary *params = [[NSDictionary alloc]init];
            
            params = @{@"pageSizeApp":@"10",@"pageApp":[NSString stringWithFormat:@"%d",currentPage],@"categoryId":self.classifyId,@"sorting":@"desc"};
            
            [self requestSortClassifyGoodsListWithDic:params withSortPath:@"goods!getGoodsAppByCompre.action"];
        }else if (sortType == salesType)
        {
            currentPage = 1;
            
            NSDictionary *params = [[NSDictionary alloc]init];
            
            params = @{@"pageSizeApp":@"10",@"pageApp":[NSString stringWithFormat:@"%d",currentPage],@"categoryId":self.classifyId,@"sorting":@"desc"};
            
            [self requestSortClassifyGoodsListWithDic:params withSortPath:@"goods!getGoodsAppByVolume.action"];
        }else if (sortType == timeType)
        {
            currentPage = 1;
            
            NSDictionary *params = [[NSDictionary alloc]init];
            
            params = @{@"pageSizeApp":@"10",@"pageApp":[NSString stringWithFormat:@"%d",currentPage],@"categoryId":self.classifyId,@"sorting":@"desc"};
            
            [self requestSortClassifyGoodsListWithDic:params withSortPath:@"goods!getGoodsAppBycreateDate.action"];
        }else if (sortType == priceType)
        {
            currentPage = 1;
            
            NSDictionary *params = [[NSDictionary alloc]init];
            
            if (isAscSort == 1) {
                params = @{@"pageSizeApp":@"10",@"pageApp":[NSString stringWithFormat:@"%d",currentPage],@"categoryId":self.classifyId,@"sorting":@"asc"};
            }else
            {
                params = @{@"pageSizeApp":@"10",@"pageApp":[NSString stringWithFormat:@"%d",currentPage],@"categoryId":self.classifyId,@"sorting":@"desc"};
            }
            
            
            [self requestSortClassifyGoodsListWithDic:params withSortPath:@"goods!getGoodsAppBymarketPrice.action"];
        }
        
    }else if (self.requestType == collectType)
    {
        currentPage = 1;
        
        NSDictionary *params = [[NSDictionary alloc]init];
        
        if (ISLOGIN) {
            params = @{@"UID":USERID,@"pageSizeApp":@"10",@"pageApp":[NSString stringWithFormat:@"%d",currentPage]};
        }else
            params = @{@"UID":@"",@"imiestatus":@"0",@"imie":DEVICEUUID,@"pageSizeApp":@"10",@"pageApp":[NSString stringWithFormat:@"%d",currentPage]};
        
        [self requestCollectListWithDic:params];
    }else if(self.requestType == brandStreet)//品牌街
    {
        currentPage = 1;
        
        NSDictionary *params = [[NSDictionary alloc]init];
        
        params = @{@"pageSizeApp":@"10",@"pageApp":[NSString stringWithFormat:@"%d",currentPage],@"brandId":self.classifyStr};
        
        [self requestBrandStreetWithDic:params];
    }
    
}
-(void)hearderRereshingEnd
{
    // (最好在刷新表格后调用)调用endRefreshing可以结束刷新状态
    [self.goodsTableView headerEndRefreshing];
}



//返回
-(void)toBackView
{
    [self.navigationController popViewControllerAnimated:YES];
}


-(void)initSegment
{
    UIView *topView=[[UIView alloc] initWithFrame:CGRectMake(0, STAR_Y, SCREEN_WIDTH, goodsTopViewHeight)];
    topView.backgroundColor=WHITE_COLOR;
    [self.view addSubview:topView];
    
    
    //各选项按钮
    paiXuBtn = [UIButton buttonWithType:UIButtonTypeCustom];
    paiXuBtn.tag = 1;
    paiXuBtn.frame = CGRectMake(0, 0, 125./320 *SCREEN_WIDTH, topView.height);
    [paiXuBtn setTitle:@"排序" forState:UIControlStateNormal];
    [paiXuBtn.titleLabel setFont:[UIFont fontWithName:k_Font size:14]];
    [paiXuBtn setTitleColor:GRAY_COLOR forState:UIControlStateNormal];
    [paiXuBtn setTitleColor:NAV_RED_COLOR forState:UIControlStateSelected];
//    paiXuBtn.selected=YES;
    [paiXuBtn addTarget:self action:@selector(topBtnClick:) forControlEvents:UIControlEventTouchUpInside];
    [topView addSubview:paiXuBtn];
    
    paiXuRightImage=[[UIImageView alloc] initWithFrame:CGRectMake(0, 0, 32, 32)];
    paiXuRightImage.image=UIImageByName(@"classifyDown");
    paiXuRightImage.center=CGPointMake(paiXuBtn.right - 32, topView.height/2.);
    [topView addSubview:paiXuRightImage];
    
    UIView *bg1=[[UIView alloc] init];
    bg1.backgroundColor =  [UIColor colorWithWhite:0.8 alpha:1];
    bg1.frame = CGRectMake(0, 0, 1, 20);
    bg1.center = CGPointMake(paiXuBtn.right-0.5, topView.height/2.);
    [topView addSubview:bg1];
    
    
    fenLeiBtn = [UIButton buttonWithType:UIButtonTypeCustom];
    fenLeiBtn.tag = 2;
    fenLeiBtn.frame = CGRectMake(paiXuBtn.right, 0, paiXuBtn.width,topView.height );
    [fenLeiBtn setTitle:@"分类" forState:UIControlStateNormal];
    [fenLeiBtn.titleLabel setFont:[UIFont fontWithName:k_Font size:14]];
    [fenLeiBtn setTitleColor:GRAY_COLOR forState:UIControlStateNormal];
    [fenLeiBtn setTitleColor:NAV_RED_COLOR forState:UIControlStateSelected];
    [fenLeiBtn addTarget:self action:@selector(topBtnClick:) forControlEvents:UIControlEventTouchUpInside];
    [topView addSubview:fenLeiBtn];
    
    fenLeiRightImage=[[UIImageView alloc] initWithFrame:CGRectMake(0, 0, 32, 32)];
    fenLeiRightImage.image=UIImageByName(@"classifyDown");
    fenLeiRightImage.center=CGPointMake(fenLeiBtn.right-32, topView.height/2.);
    [topView addSubview:fenLeiRightImage];
    
    
    
    UIView *bg2=[[UIView alloc] init];
    bg2.backgroundColor = [UIColor colorWithWhite:0.8 alpha:1];
    bg2.frame = CGRectMake(0, 0, 1, 20);
    bg2.center = CGPointMake(fenLeiBtn.right-0.5, topView.height/2.);
    [topView addSubview:bg2];
    
    
    showTypeBtn = [UIButton buttonWithType:UIButtonTypeCustom];
    showTypeBtn.tag = 3;
    showTypeBtn.frame = CGRectMake(fenLeiBtn.right, 0, 70, topView.height);
    [showTypeBtn setTitle:@"" forState:UIControlStateNormal];
    [showTypeBtn.titleLabel setFont:[UIFont fontWithName:k_Font size:14]];
    [showTypeBtn setTitleColor:GRAY_COLOR forState:UIControlStateNormal];
    [showTypeBtn setTitleColor:NAV_RED_COLOR forState:UIControlStateSelected];
    [showTypeBtn addTarget:self action:@selector(topBtnClick:) forControlEvents:UIControlEventTouchUpInside];
    
    if (showTypeIsLine) {
        [showTypeBtn setImage:[UIImage imageNamed:@"classifyType2"] forState:UIControlStateNormal];
    }else [showTypeBtn setImage:[UIImage imageNamed:@"classifyType1"] forState:UIControlStateNormal];
    
    [topView addSubview:showTypeBtn];
    
    UIView *line=[[UIView alloc] initWithFrame:CGRectMake(0, goodsTopViewHeight-0.5, SCREEN_WIDTH, 0.5)];
    line.backgroundColor=UICOLOR_RGB(204, 204, 204);
    [topView addSubview:line];
    
    
    
    //排序view
    [self initPaiXuView];
    
    //分类view
    [self initFenLeiView];
}
-(void)initPaiXuView
{
    
    UIView *topView = [[UIView alloc] initWithFrame:CGRectMake(0, STAR_Y +goodsTopViewHeight, SCREEN_WIDTH, 40)];
    topView.backgroundColor = UICOLOR_RGB(244, 244, 244);

    /*
    paiXuSegmentedControl=[[UISegmentedControl alloc] initWithItems:@[@"综合",@"销量",@"时间",@"价格"]];
    paiXuSegmentedControl.frame=CGRectMake(10., 5, 300., 30);
    paiXuSegmentedControl.tintColor=NAV_RED_COLOR;
    paiXuSegmentedControl.selectedSegmentIndex=0;
    //        [segmentedControl setImage:[UIImage imageNamed:@"loupanxq.png"] forSegmentAtIndex:0];
    [paiXuSegmentedControl setSegmentedControlStyle:UISegmentedControlStyleBordered];
    
    [paiXuSegmentedControl addTarget:self action:@selector(paiXuSegmentedControlChanged:) forControlEvents:UIControlEventValueChanged];
    [topView addSubview:paiXuSegmentedControl];
    */
    
    ///*
    UIImageView *zhImg = [[UIImageView alloc] initWithFrame:CGRectMake(MAKEOF5(10), 6, 27, 27)];
    [zhImg setImage:[UIImage imageNamed:@"comprehensiveSort.png"]];
    [topView addSubview:zhImg];
    
    zhBtn = [UIButton buttonWithType:UIButtonTypeCustom];
    zhBtn.frame = CGRectMake(MAKEOF5(20), 0, 60, 40);
    zhBtn.titleLabel.font = [UIFont systemFontOfSize:14.0];
    [zhBtn setTitle:@"综合" forState:UIControlStateNormal];
    [zhBtn setTitleColor:[UIColor lightGrayColor] forState:UIControlStateNormal];
    [zhBtn setTitleColor:NAV_RED_COLOR forState:UIControlStateSelected];
    [zhBtn addTarget:self action:@selector(zhBtnAction) forControlEvents:UIControlEventTouchUpInside];
    [topView addSubview:zhBtn];
    
    UIImageView *xlImg = [[UIImageView alloc] initWithFrame:CGRectMake(MAKEOF5(90), 6, 27, 27)];
    [xlImg setImage:[UIImage imageNamed:@"salesSort.png"]];
    [topView addSubview:xlImg];
    
    xlBtn = [UIButton buttonWithType:UIButtonTypeCustom];
    xlBtn.frame = CGRectMake(MAKEOF5(100), 0, 60, 40);
    xlBtn.titleLabel.font = [UIFont systemFontOfSize:14.0];
    [xlBtn setTitle:@"销量" forState:UIControlStateNormal];
    [xlBtn setTitleColor:[UIColor lightGrayColor] forState:UIControlStateNormal];
    [xlBtn setTitleColor:NAV_RED_COLOR forState:UIControlStateSelected];
    [xlBtn addTarget:self action:@selector(xlBtnAction) forControlEvents:UIControlEventTouchUpInside];
    [topView addSubview:xlBtn];
    
    UIImageView *sjImg = [[UIImageView alloc] initWithFrame:CGRectMake(MAKEOF5(170), 6, 27, 27)];
    [sjImg setImage:[UIImage imageNamed:@"historySearchSort.png"]];
    [topView addSubview:sjImg];
    
    sjBtn = [UIButton buttonWithType:UIButtonTypeCustom];
    sjBtn.frame = CGRectMake(MAKEOF5(180), 0, 60, 40);
    sjBtn.titleLabel.font = [UIFont systemFontOfSize:14.0];
    [sjBtn setTitle:@"时间" forState:UIControlStateNormal];
    [sjBtn setTitleColor:[UIColor lightGrayColor] forState:UIControlStateNormal];
    [sjBtn setTitleColor:NAV_RED_COLOR forState:UIControlStateSelected];
    [sjBtn addTarget:self action:@selector(sjBtnAction) forControlEvents:UIControlEventTouchUpInside];
    [topView addSubview:sjBtn];
    
    UIImageView *jgImg = [[UIImageView alloc] initWithFrame:CGRectMake(MAKEOF5(250), 6, 27, 27)];
    [jgImg setImage:[UIImage imageNamed:@"priceSort.png"]];
    [topView addSubview:jgImg];
    
    jgBtn = [UIButton buttonWithType:UIButtonTypeCustom];
    jgBtn.frame = CGRectMake(MAKEOF5(260), 0, 60, 40);
    jgBtn.titleLabel.font = [UIFont systemFontOfSize:14.0];
    [jgBtn setTitle:@"价格" forState:UIControlStateNormal];
    [jgBtn setTitleColor:[UIColor lightGrayColor] forState:UIControlStateNormal];
    [jgBtn setTitleColor:NAV_RED_COLOR forState:UIControlStateSelected];
    [jgBtn addTarget:self action:@selector(jgBtnAction) forControlEvents:UIControlEventTouchUpInside];
    [topView addSubview:jgBtn];
    
    [self reloadPaiXuBtn];
    
    
//    UIView *line = [[UIView alloc] initWithFrame:CGRectMake(0, 39.5, topView.frame.size.width, 0.5)];
//    line.backgroundColor = [UIColor lightGrayColor];
//    [topView addSubview:line];

    //*/
    
    
    paiXuView=topView;
    
    paiXuView.alpha=0;
    
    [self.view addSubview:paiXuView];
}

-(void)reloadPaiXuBtn
{
    if (sortType == comprehensiveType) {
        zhBtn.selected = YES;
        xlBtn.selected = NO;
        sjBtn.selected = NO;
        jgBtn.selected = NO;
    }else if (sortType == salesType){
        zhBtn.selected = NO;
        xlBtn.selected = YES;
        sjBtn.selected = NO;
        jgBtn.selected = NO;
    }else if (sortType == timeType){
        zhBtn.selected = NO;
        xlBtn.selected = NO;
        sjBtn.selected = YES;
        jgBtn.selected = NO;
    }else if (sortType == priceType){
        zhBtn.selected = NO;
        xlBtn.selected = NO;
        sjBtn.selected = NO;
        jgBtn.selected = YES;
    }
}

-(void)initFenLeiView
{
    [self setupGridView];
}

-(void)showPaiXuView:(BOOL)isShow
{
    if (!isShow) {
        paiXuBtn.selected=NO;
        paiXuRightImage.image=UIImageByName(@"classifyDown");
        
        fenLeiBtn.selected=NO;
        fenLeiRightImage.image=UIImageByName(@"classifyDown");
    }else
    {
        paiXuBtn.selected=YES;
        paiXuRightImage.image=UIImageByName(@"classifyUp");
    
        fenLeiBtn.selected=NO;
        fenLeiRightImage.image=UIImageByName(@"classifyDown");
    }
    
    
    CGRect frame;
    CGFloat alpha;
    CGRect tbViewFrame;
    
    
    if (isShow)
    {
        frame=CGRectMake(0, STAR_Y+goodsTopViewHeight,SCREEN_WIDTH , paiXuView.height);
        tbViewFrame=CGRectMake(0, STAR_Y+goodsTopViewHeight + paiXuView.height, SCREEN_WIDTH, SCREEN_HEIGHT-STAR_Y-goodsTopViewHeight - paiXuView.height);
        alpha=1;
    }else
    {
        frame=CGRectMake(0, STAR_Y+goodsTopViewHeight,SCREEN_WIDTH , paiXuView.height);
        tbViewFrame=CGRectMake(0, STAR_Y+ goodsTopViewHeight, SCREEN_WIDTH,  SCREEN_HEIGHT -STAR_Y- goodsTopViewHeight);
        alpha=0;
    }

        
        
    [UIView animateWithDuration:0.3 animations:^{
        paiXuView.alpha=alpha;
        paiXuView.frame=frame;
        
        fenLeiView.alpha=0;
        
        self.goodsTableView.frame=tbViewFrame;
    }];
    
}

-(void)showFenLeiView:(BOOL)isShow
{
    if (!isShow) {
        
        paiXuBtn.selected=NO;
        paiXuRightImage.image=UIImageByName(@"classifyDown");
        
        fenLeiBtn.selected=NO;
        fenLeiRightImage.image=UIImageByName(@"classifyDown");
        
        
    }else
    {
        fenLeiBtn.selected=YES;
        fenLeiRightImage.image=UIImageByName(@"classifyUp");
        
        
        paiXuBtn.selected=NO;
        paiXuRightImage.image=UIImageByName(@"classifyDown");
    }
    
    
    CGRect frame;
    CGFloat alpha;
    CGRect tbViewFrame;
    
    
    if (isShow)
    {
        frame=CGRectMake(0, STAR_Y+goodsTopViewHeight,SCREEN_WIDTH , fenLeiView.height);
        tbViewFrame=CGRectMake(0, STAR_Y+goodsTopViewHeight +fenLeiView.height, SCREEN_WIDTH, SCREEN_HEIGHT-STAR_Y-goodsTopViewHeight-fenLeiView.height);
        alpha=1;
    }else
    {
        frame=CGRectMake(0, STAR_Y+goodsTopViewHeight,SCREEN_WIDTH , fenLeiView.height);
        tbViewFrame=CGRectMake(0, STAR_Y+goodsTopViewHeight, SCREEN_WIDTH, SCREEN_HEIGHT-STAR_Y-goodsTopViewHeight);
        alpha=0;
    }
    
    
    
    [UIView animateWithDuration:0.3 animations:^{
        fenLeiView.alpha=alpha;
        fenLeiView.frame=frame;
        
        paiXuView.alpha=0;
        
        self.goodsTableView.frame=tbViewFrame;
    }];
    
}

-(void)topBtnClick:(UIButton *)sender
{
    @synchronized(self)
    {

        [UIView animateWithDuration:3 animations:^{
            
        }];
       
        int tag=(int)sender.tag;
        
        switch (tag) {
            case 1:
            {
                
                [self  showPaiXuView:!paiXuBtn.selected];
            }
                break;
            case 2:
            {
                
                
                [self showFenLeiView:!fenLeiBtn.selected];
            }
                break;
                
            case 3:
            {
                [self changeShowType:sender];
            }
                break;
            default:
                break;
        }
    }
}

-(void)paiXuSegmentedControlChanged:(id)sender
{
    
}


#pragma mark - 分类网格创建


- (void)setupGridView{
    
    UIScrollView *topView = [[UIScrollView alloc] initWithFrame:CGRectMake(0, STAR_Y +50, SCREEN_WIDTH, 40)];
    topView.backgroundColor = UICOLOR_RGB(244, 244, 244);
    
    NSLog(@"数目==%d",(int)self.subClassifyArray.count);

    fenLeiView =topView;
    
    ///*
    self.gridView = [[MMGridView alloc] initWithFrame:CGRectMake(20, 5, SCREEN_WIDTH-40, 40)];
    self.gridView.backgroundColor = CLEAR_COLOR;
    //    self.gridView.numberOfColumns = 1;
    //    self.gridView.numberOfRows = 5;
    self.gridView.dataSource = self;
    self.gridView.delegate = self;
    [topView addSubview:self.gridView];
    
    CGSize detailSize = [[[self.subClassifyArray firstObject] objectForKey:@"categoryName"] sizeWithFont:[UIFont systemFontOfSize:12.0]
                                                                               constrainedToSize:CGSizeMake(SCREEN_WIDTH-40, 21)
                                                                                   lineBreakMode:NSLineBreakByWordWrapping];
    NSLog(@"detailSize=%f ,%@",detailSize.width,[self.subClassifyArray firstObject]);
    

    
    self.gridView.numberOfColumns = 3;
    self.gridView.numberOfRows = (self.subClassifyArray.count-1) / 3 + 1;
    self.gridView.frame = CGRectMake(20, 5,  SCREEN_WIDTH-40, ((self.subClassifyArray.count-1) / 3 + 1) * 40 );
    
    
    
    fenLeiView.frame=CGRectMake(0, STAR_Y +50, SCREEN_WIDTH, self.gridView.height +10);
    
    if (self.gridView.height>SCREEN_WIDTH-goodsTopViewHeight-STAR_Y) {
        fenLeiView.frame=CGRectMake(0, STAR_Y +50, SCREEN_WIDTH, SCREEN_WIDTH-goodsTopViewHeight-STAR_Y);
        
        fenLeiView.contentSize=CGSizeMake(SCREEN_WIDTH, self.gridView.height +5);
    }
    
    fenLeiView.alpha=0;
    [self.view addSubview:fenLeiView];
    //*/
}


- (NSInteger)numberOfCellsInGridView:(MMGridView *)gridView
{

    return self.subClassifyArray.count;
    
}


- (MMGridViewCell *)gridView:(MMGridView *)gridView cellAtIndex:(NSUInteger)index
{
    
    MMGridViewDefaultCell *cell = [[MMGridViewDefaultCell alloc] initWithFrame:CGRectNull];
    cell.textLabel.text =  [[self.subClassifyArray objectAtIndex:index] objectForKey:@"categoryName"];
    
    
    cell.backgroundColor=WHITE_COLOR;
    cell.textLabel.font=[UIFont fontWithName:k_Font size:12];
    
    NSLog(@"------%@   %@",cell.textLabel.text ,[[self.subClassifyArray objectAtIndex:index] objectForKey:@"categoryName"]);
    if (index == _numIndexColor) {
        cell.textLabel.textColor = [UIColor colorWithRed:244/255.f green:45/255.f blue:100/255.f alpha:1.0];
        cell.iconImageVIew.layer.borderColor = [UIColor colorWithRed:244/255.f green:45/255.f blue:100/255.f alpha:1.0].CGColor;
    }else
    {
        cell.textLabel.textColor=UICOLOR_RGB(66, 66, 66);
    }
    
    
    return cell;
}


#pragma mark  GridView Delegate

- (void)gridView:(MMGridView *)gridView didSelectCell:(MMGridViewCell *)cell atIndex:(NSUInteger)index
{
    NSLog(@"%d",(int)index);
    
    _numIndexColor = (int)index;
    [self.gridView reloadData];
    
    self.classifyId=self.subClassifyArray[index][@"categoryId"];
    
    
    [self refreshDataAgain:nil];
}

- (void)gridView:(MMGridView *)theGridView changedPageToIndex:(NSUInteger)index
{
    
}




- (IBAction)refreshDataAgain:(id)sender {
    
    currentPage = 1;
    if (self.requestType == searchGoodsType) {
        NSDictionary *params = [[NSDictionary alloc]init];
        
        params = @{@"serachName":self.searchStr,@"pageSizeApp":@"10",@"pageApp":[NSString stringWithFormat:@"%d",currentPage]};
        
        [self requestSearchGoodsWithDic:params];
        
    }else if (self.requestType == homeViewType)
    {
        NSDictionary *params = [[NSDictionary alloc]init];
        
        params = @{@"pageSizeApp":@"10",@"pageApp":[NSString stringWithFormat:@"%d",currentPage],@"sortType":self.classifyStr};
        
        [self requestGoodListWithDic:params];
        
    }else if (self.requestType == classifyType)
    {
        if (sortType == comprehensiveType) {
            currentPage = 1;
            
            NSDictionary *params = [[NSDictionary alloc]init];
            
            params = @{@"pageSizeApp":@"10",@"pageApp":[NSString stringWithFormat:@"%d",currentPage],@"categoryId":self.classifyId,@"sorting":@"desc"};
            
            [self requestSortClassifyGoodsListWithDic:params withSortPath:@"goods!getGoodsAppByCompre.action"];
        }else if (sortType == salesType)
        {
            currentPage = 1;
            
            NSDictionary *params = [[NSDictionary alloc]init];
            
            params = @{@"pageSizeApp":@"10",@"pageApp":[NSString stringWithFormat:@"%d",currentPage],@"categoryId":self.classifyId,@"sorting":@"desc"};
            
            [self requestSortClassifyGoodsListWithDic:params withSortPath:@"goods!getGoodsAppByVolume.action"];
        }else if (sortType == timeType)
        {
            currentPage = 1;
            
            NSDictionary *params = [[NSDictionary alloc]init];
            
            params = @{@"pageSizeApp":@"10",@"pageApp":[NSString stringWithFormat:@"%d",currentPage],@"categoryId":self.classifyId,@"sorting":@"desc"};
            
            [self requestSortClassifyGoodsListWithDic:params withSortPath:@"goods!getGoodsAppBycreateDate.action"];
        }else if (sortType == priceType)
        {
            currentPage = 1;
            
            NSDictionary *params = [[NSDictionary alloc]init];
            
            if (isAscSort == 1) {
                params = @{@"pageSizeApp":@"10",@"pageApp":[NSString stringWithFormat:@"%d",currentPage],@"categoryId":self.classifyId,@"sorting":@"asc"};
            }else
            {
                params = @{@"pageSizeApp":@"10",@"pageApp":[NSString stringWithFormat:@"%d",currentPage],@"categoryId":self.classifyId,@"sorting":@"desc"};
            }
            
            
            [self requestSortClassifyGoodsListWithDic:params withSortPath:@"goods!getGoodsAppBymarketPrice.action"];
        }
        
    }else if (self.requestType == collectType)
    {
        currentPage = 1;
        
        NSDictionary *params = [[NSDictionary alloc]init];
        
        if (ISLOGIN) {
            params = @{@"UID":USERID,@"pageSizeApp":@"10",@"pageApp":[NSString stringWithFormat:@"%d",currentPage]};
        }else
            params = @{@"UID":@"",@"imiestatus":@"0",@"imie":DEVICEUUID,@"pageSizeApp":@"10",@"pageApp":[NSString stringWithFormat:@"%d",currentPage]};
        
        
        
        [self requestCollectListWithDic:params];
    }
    
}


#pragma mark- tableView detegate
- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView;
{
    return 1;
    
}
- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    
    if (showTypeIsLine) {
        return [goodsDataArray count];
    }
    
    return ([goodsDataArray count] - 1)/2 + 1;
    
    
}


- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath
{
    if(showTypeIsLine)
    {
        return 144;
    }
    return 195;
}
- (CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section
{
    return 0;
}


- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    if (showTypeIsLine) {
        static NSString *CellIdentifier = @"GoodsViewCell2";
        GoodsViewCell2 *cell = (GoodsViewCell2 *)[tableView dequeueReusableCellWithIdentifier:CellIdentifier];
        if (cell == nil) {
            cell = [[[NSBundle mainBundle] loadNibNamed:@"GoodsViewCell2" owner:self options:nil] lastObject];
        }
        
        cell.backgroundColor = [UIColor whiteColor];
        cell.selectionStyle = UITableViewCellSelectionStyleNone;
        //        cell.delegate = self;
        
        [cell configCellWithArray:goodsDataArray indexRow:(int)indexPath.row];
        
        return cell;
    }
    
    
    static NSString *CellIdentifier = @"GoodsViewCell";
    GoodsViewCell *cell = (GoodsViewCell *)[tableView dequeueReusableCellWithIdentifier:CellIdentifier];
    if (cell == nil) {
        cell = [[[NSBundle mainBundle] loadNibNamed:@"GoodsViewCell" owner:self options:nil] lastObject];
    }
    
    cell.backgroundColor = [UIColor whiteColor];
    cell.selectionStyle = UITableViewCellSelectionStyleNone;
    cell.delegate = self;
    //    [cell configCellWithArray:nil];
    
    if ([goodsDataArray count]%2 == 0) {
        NSArray *subArray = [goodsDataArray subarrayWithRange:NSMakeRange(indexPath.row*2 ,2)];
        [cell configCellWithArray:subArray indexRow:(int)indexPath.row];
        
    }else if([goodsDataArray count]%2 == 1)
    {
        if ( (indexPath.row + 1) * 2 < [goodsDataArray count]) {
            NSArray *subArray = [goodsDataArray subarrayWithRange:NSMakeRange(indexPath.row * 2 ,2)];
            [cell configCellWithArray:subArray indexRow:(int)indexPath.row];
        }else
        {
            NSArray *subArray = [goodsDataArray subarrayWithRange:NSMakeRange(indexPath.row*2 ,1)];
            [cell configCellWithArray:subArray indexRow:(int)indexPath.row];
        }
        
    }
    
    
    
    
    
    return cell;
    
    
    
}

-(void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
    [tableView deselectRowAtIndexPath:indexPath animated:YES];
    
    
    //    ProductDetailsViewController *controller = [[ProductDetailsViewController alloc] initWithProductInfo:[goodsData objectAtIndex:indexPath.row]];
    //    UINavigationController *navigationController = (UINavigationController*)[UIApplication sharedApplication].delegate.window.rootViewController;
    //    [navigationController pushViewController: controller animated:YES];
    

    if (showTypeIsLine) {
        
        int index=(int)indexPath.row;
        
        GoodsDetailTwoViewController *ctrVc = [[GoodsDetailTwoViewController alloc] initWithNibName:@"GoodsDetailTwoViewController" bundle:nil];
        ctrVc.hidesBottomBarWhenPushed = YES;
        ctrVc.goodsIdStr = [[goodsDataArray objectAtIndex:index] objectForKey:@"id"];
        ctrVc.classifyIdStr = [[goodsDataArray objectAtIndex:index] objectForKey:@"goodsCategoryId"];
        [self.navigationController pushViewController:ctrVc animated:YES];
        
    }
}


-(void)zhBtnAction
{
    sortType = comprehensiveType;
    currentPage = 1;
    
    NSDictionary *params = [[NSDictionary alloc]init];
    
    params = @{@"pageSizeApp":@"10",@"pageApp":[NSString stringWithFormat:@"%d",currentPage],@"categoryId":self.classifyId,@"sorting":@"desc"};
    
    [self requestSortClassifyGoodsListWithDic:params withSortPath:@"goods!getGoodsAppByCompre.action"];
    
    
    [self reloadPaiXuBtn];
}
-(void)xlBtnAction
{
    sortType = salesType;
    currentPage = 1;
    
    NSDictionary *params = [[NSDictionary alloc]init];
    
    params = @{@"pageSizeApp":@"10",@"pageApp":[NSString stringWithFormat:@"%d",currentPage],@"categoryId":self.classifyId,@"sorting":@"desc"};
    
    [self requestSortClassifyGoodsListWithDic:params withSortPath:@"goods!getGoodsAppByVolume.action"];
    
    [self reloadPaiXuBtn];
}
-(void)sjBtnAction
{
    sortType = timeType;
    currentPage = 1;
    
    NSDictionary *params = [[NSDictionary alloc]init];
    
    params = @{@"pageSizeApp":@"10",@"pageApp":[NSString stringWithFormat:@"%d",currentPage],@"categoryId":self.classifyId,@"sorting":@"desc"};
    
    [self requestSortClassifyGoodsListWithDic:params withSortPath:@"goods!getGoodsAppBycreateDate.action"];
    
    [self reloadPaiXuBtn];
}
-(void)jgBtnAction
{
    sortType = priceType;
    currentPage = 1;
    
    NSDictionary *params = [[NSDictionary alloc]init];
    
    if (isAscSort == 1) {
        params = @{@"pageSizeApp":@"10",@"pageApp":[NSString stringWithFormat:@"%d",currentPage],@"categoryId":self.classifyId,@"sorting":@"desc"};
        isAscSort = 0;
    }else
    {
        params = @{@"pageSizeApp":@"10",@"pageApp":[NSString stringWithFormat:@"%d",currentPage],@"categoryId":self.classifyId,@"sorting":@"asc"};
        isAscSort = 1;
    }
    
    
    [self requestSortClassifyGoodsListWithDic:params withSortPath:@"goods!getGoodsAppBymarketPrice.action"];
    
    
    [self reloadPaiXuBtn];
}

//显示提示
-(void)showPromptLab
{
    [UIView animateWithDuration:1.0 delay:0.0 options:UIViewAnimationOptionCurveEaseIn animations:^{self.promptLab.alpha = 0.6;} completion:nil];
    [self performSelector:@selector(dismissPromptLab) withObject:nil afterDelay:1.0];
}
//提示消失
-(void)dismissPromptLab
{
    [UIView animateWithDuration:1.0 delay:1.0 options:UIViewAnimationOptionCurveEaseIn animations:^{self.promptLab.alpha = 0.0;} completion:nil];
}


#pragma mark GoodsViewCellDelegate Methods
-(void)goodsBtnClick:(NSUInteger)row
{
    //    NSLog(@"-->%@",[[goodsDataArray objectAtIndex:row] objectForKey:@"id"]);
    GoodsDetailTwoViewController *ctrVc = [[GoodsDetailTwoViewController alloc] initWithNibName:@"GoodsDetailTwoViewController" bundle:nil];
    ctrVc.hidesBottomBarWhenPushed = YES;

    ctrVc.goodsIdStr = [[goodsDataArray objectAtIndex:row] objectForKey:@"id"];
    ctrVc.classifyIdStr = [[goodsDataArray objectAtIndex:row] objectForKey:@"goodsCategoryId"];
    [self.navigationController pushViewController:ctrVc animated:YES];
}


#pragma mark - 请求相关


-(void)isDowmloadMore:(NSArray *)arry
{
    __weak typeof(self) weakSelf = self;
    if ([arry count] > 9) {
        weakSelf.goodsTableView.infiniteScrollingView.enabled = YES;
        
        [self.goodsTableView addInfiniteScrollingWithActionHandler:^{
            [weakSelf getMoreData];
            [weakSelf.goodsTableView.infiniteScrollingView stopAnimating];
        }];
        
    }else
    {
        if (self.goodsTableView.infiniteScrollingView != nil) {
            weakSelf.goodsTableView.infiniteScrollingView.enabled = NO;
        }
        
    }
}

//                       加载更多商品
-(void)getMoreData
{
    if (self.requestType == searchGoodsType) {
        currentPage ++;
        
        NSDictionary *params = [[NSDictionary alloc]init];
        
        params = @{@"serachName":self.searchStr,@"pageSizeApp":@"10",@"pageApp":[NSString stringWithFormat:@"%d",currentPage]};
        
        [self requestSearchGoodsMoreWithDic:params];
    }else if (self.requestType == homeViewType)
    {
        currentPage ++;
        
        NSDictionary *params = [[NSDictionary alloc]init];
        
        params = @{@"pageSizeApp":@"10",@"pageApp":[NSString stringWithFormat:@"%d",currentPage],@"sortType":self.classifyStr};
        
        [self requestGoodListMoreWithDic:params];
        
    }else if (self.requestType == classifyType)
    {
        if (sortType == comprehensiveType) {
            currentPage ++;
            
            NSDictionary *params = [[NSDictionary alloc]init];
            
            params = @{@"pageSizeApp":@"10",@"pageApp":[NSString stringWithFormat:@"%d",currentPage],@"categoryId":self.classifyId,@"sorting":@"desc"};
            
            [self requestSortClassifyGoodsListMoreWithDic:params withSortPath:@"goods!getGoodsAppByCompre.action"];
        }else if (sortType == salesType)
        {
            currentPage ++;
            
            NSDictionary *params = [[NSDictionary alloc]init];
            
            params = @{@"pageSizeApp":@"10",@"pageApp":[NSString stringWithFormat:@"%d",currentPage],@"categoryId":self.classifyId,@"sorting":@"desc"};
            
            [self requestSortClassifyGoodsListMoreWithDic:params withSortPath:@"goods!getGoodsAppByVolume.action"];
        }else if (sortType == timeType)
        {
            currentPage ++;
            
            NSDictionary *params = [[NSDictionary alloc]init];
            
            params = @{@"pageSizeApp":@"10",@"pageApp":[NSString stringWithFormat:@"%d",currentPage],@"categoryId":self.classifyId,@"sorting":@"desc"};
            
            [self requestSortClassifyGoodsListMoreWithDic:params withSortPath:@"goods!getGoodsAppBycreateDate.action"];
        }else if (sortType == priceType)
        {
            currentPage ++;
            
            NSDictionary *params = [[NSDictionary alloc]init];
            
            if (isAscSort == 1) {
                params = @{@"pageSizeApp":@"10",@"pageApp":[NSString stringWithFormat:@"%d",currentPage],@"categoryId":self.classifyId,@"sorting":@"asc"};
            }else
            {
                params = @{@"pageSizeApp":@"10",@"pageApp":[NSString stringWithFormat:@"%d",currentPage],@"categoryId":self.classifyId,@"sorting":@"desc"};
            }
            
            
            [self requestSortClassifyGoodsListMoreWithDic:params withSortPath:@"goods!getGoodsAppBymarketPrice.action"];
        }
        
        
    }else if (self.requestType == collectType)
    {
        currentPage ++;
        
        NSDictionary *params = [[NSDictionary alloc]init];
        if (ISLOGIN) {
            params = @{@"UID":USERID,@"pageSizeApp":@"10",@"pageApp":[NSString stringWithFormat:@"%d",currentPage]};
        }else params = @{@"UID":@"",@"imiestatus":@"0",@"imie":DEVICEUUID,@"pageSizeApp":@"10",@"pageApp":[NSString stringWithFormat:@"%d",currentPage]};
        
        [self requestCollectListMoreWithDic:params];
        
    }else if(self.requestType == brandStreet){
        
        currentPage ++;
        
        NSDictionary *params = [[NSDictionary alloc]init];
        
        params = @{@"pageSizeApp":@"10",@"pageApp":[NSString stringWithFormat:@"%d",currentPage],@"brandId":self.classifyStr};
        
        [self requestBrandStreetMoreWithDic:params];
        
    }
    
}



#pragma mark MKHttpRequestAction  GoodsList
-(void)requestGoodListWithDic:(NSDictionary *)dic
{
    self.loadingView.frame = CGRectMake(0, STAR_Y, SCREEN_WIDTH, SCREEN_HEIGHT);
    self.loadingView.backgroundColor = [UIColor whiteColor];
    [self.view addSubview:self.loadingView];
    
    self.noNetView.hidden = YES;
    self.noNetView.width = SCREEN_WIDTH;

    self.indicator.hidden = NO;
    [_indicator setCenter:CGPointMake(SCREEN_WIDTH/2., SCREEN_HEIGHT/2.)];
    [self.indicator startAnimating];
    
    self.noNetView.hidden = YES;
    
    
    [[MKHttpServiceEngine shareMyInstance] requestHomeGoodListWithWithDic:dic completionHandler:^(id responseObject) {
        NSDictionary *responseDic = responseObject;
        NSLog(@"arrys-->%@",responseDic);
        
        if ([[responseDic objectForKey:@"success"] boolValue] == 1)
        {
            [goodsDataArray removeAllObjects];
            
            [goodsDataArray addObjectsFromArray:[responseDic objectForKey:@"datasource"]];
            
            [self.goodsTableView reloadData];
        }else
        {
            self.promptLab.text = @"数据获取失败";
            [self showPromptLab];
            
            [self.goodsTableView removeFromSuperview];
        }
        
        [self isDowmloadMore:[responseDic objectForKey:@"datasource"]];
        
        
        
        [self.indicator stopAnimating];
        [self.loadingView removeFromSuperview];
        self.loadingView = nil;
        
    } errorHandler:^(NSError *error) {
        
        NSLog(@"error-->%@",error);
        [self.indicator stopAnimating];
        
        
        self.indicator.hidden = YES;
        self.noNetView.hidden = NO;
        
    }];
    
}

-(void)requestGoodListMoreWithDic:(NSDictionary *)dic
{
    //    NSString *pathStr = [NSString stringWithFormat:@"shopxx/shop/%@",classifyStr];
    
    [[MKHttpServiceEngine shareMyInstance] requestHomeGoodListWithWithDic:dic completionHandler:^(id responseObject) {
        
        NSDictionary *responseDic = responseObject;
        NSLog(@"arrys-->%@",responseDic);
        
        if ([[responseDic objectForKey:@"success"] boolValue] == 1) {
            if ([goodsDataArray containsObject:[[responseDic objectForKey:@"datasource"] firstObject]]) {
                //            [goodsDataArray removeObjectsInArray:[responseDic objectForKey:@"datasource"]];
                //            [goodsDataArray addObjectsFromArray:[responseDic objectForKey:@"datasource"]];
            }else
            {
                [goodsDataArray addObjectsFromArray:[responseDic objectForKey:@"datasource"]];
            }
            [self.goodsTableView reloadData];
        }
        
        
        [self isDowmloadMore:[responseDic objectForKey:@"datasource"]];
        
        
        
        
    } errorHandler:^(NSError *error) {
        
        NSLog(@"error-->%@",error);
        
        currentPage --;
        
    }];
    
}
#pragma mark MKHttpRequestAction  brandStreet 品牌街
-(void)requestBrandStreetWithDic:(NSDictionary *)dic
{
    self.loadingView.frame = CGRectMake(0, STAR_Y, SCREEN_WIDTH, SCREEN_HEIGHT);
    self.loadingView.backgroundColor = [UIColor whiteColor];
    [self.view addSubview:self.loadingView];
    
    self.noNetView.hidden = YES;
    self.indicator.hidden = NO;
    //    _indicator = [[UIActivityIndicatorView alloc] initWithActivityIndicatorStyle:UIActivityIndicatorViewStyleGray];
    [_indicator setCenter:CGPointMake(SCREEN_WIDTH/2., SCREEN_HEIGHT/2.)];
    //    [self.loadingView addSubview:_indicator];
    [self.indicator startAnimating];
    
    //    self.noNetView = [[UIView alloc] initWithFrame:CGRectMake(48, 92, 224, 254)];
    //    [self.loadingView addSubview:self.noNetView];
    self.noNetView.hidden = YES;
    
    
    [[MKHttpServiceEngine shareMyInstance] requestBrandStreetDetailWithDic:dic completionHandler:^(id responseObject) {
        NSDictionary *responseDic = responseObject;
        NSLog(@"arrys-->%@",responseDic);
        
        if ([[responseDic objectForKey:@"success"] boolValue] == 1)
        {
            [goodsDataArray removeAllObjects];
            
            [goodsDataArray addObjectsFromArray:[responseDic objectForKey:@"datasource"]];
            
            [self.goodsTableView reloadData];
        }else
        {
            self.promptLab.text = @"数据获取失败";
            [self showPromptLab];
            
            [self.goodsTableView removeFromSuperview];
        }
        
        
        NSLog(@"arry-->%@",goodsDataArray);
        [self isDowmloadMore:[responseDic objectForKey:@"datasource"]];
        
        
        
        [self.indicator stopAnimating];
        [self.loadingView removeFromSuperview];
        self.loadingView = nil;
        
    } errorHandler:^(NSError *error) {
        
        NSLog(@"error-->%@",error);
        [self.indicator stopAnimating];
        self.indicator.hidden = YES;
        self.noNetView.hidden = NO;
        
    }];
    
}

-(void)requestBrandStreetMoreWithDic:(NSDictionary *)dic
{
    //    NSString *pathStr = [NSString stringWithFormat:@"shopxx/shop/%@",classifyStr];
    
    [[MKHttpServiceEngine shareMyInstance] requestBrandStreetDetailWithDic:dic completionHandler:^(id responseObject) {
        
        NSDictionary *responseDic = responseObject;
        NSLog(@"arrys-->%@",responseDic);
        
        if ([[responseDic objectForKey:@"success"] boolValue] == 1) {
            if ([goodsDataArray containsObject:[[responseDic objectForKey:@"datasource"] firstObject]]) {
                //            [goodsDataArray removeObjectsInArray:[responseDic objectForKey:@"datasource"]];
                //            [goodsDataArray addObjectsFromArray:[responseDic objectForKey:@"datasource"]];
            }else
            {
                [goodsDataArray addObjectsFromArray:[responseDic objectForKey:@"datasource"]];
            }
            [self.goodsTableView reloadData];
        }
        
        
        [self isDowmloadMore:[responseDic objectForKey:@"datasource"]];
        
        
        
        
    } errorHandler:^(NSError *error) {
        
        NSLog(@"error-->%@",error);
        
        currentPage --;
        
    }];
    
}
#pragma mark MKHttpRequestAction  searchGoods 搜索
-(void)requestSearchGoodsWithDic:(NSDictionary *)dic
{
    self.loadingView.frame = CGRectMake(0, STAR_Y, SCREEN_WIDTH, SCREEN_HEIGHT);
    self.loadingView.backgroundColor = [UIColor whiteColor];
    [self.view addSubview:self.loadingView];
    
    self.noNetView.hidden = YES;
    self.indicator.hidden = NO;
    //    _indicator = [[UIActivityIndicatorView alloc] initWithActivityIndicatorStyle:UIActivityIndicatorViewStyleGray];
    [_indicator setCenter:CGPointMake(SCREEN_WIDTH/2., SCREEN_HEIGHT/2.)];
    [self.indicator startAnimating];
    
    //    self.noNetView = [[UIView alloc] initWithFrame:CGRectMake(48, 92, 224, 254)];
    //    [self.loadingView addSubview:self.noNetView];
    self.noNetView.hidden = YES;
    
    [[MKHttpServiceEngine shareMyInstance] requestSearchGoodsWithDic:dic completionHandler:^(id responseObject) {
        NSDictionary *responseDic = responseObject;
        
        [goodsDataArray removeAllObjects];
        
        if ([[responseDic objectForKey:@"success"] boolValue] == 1) {
            [goodsDataArray addObjectsFromArray:[responseDic objectForKey:@"datasource"]];
            [self.goodsTableView reloadData];
        }else
        {
            self.promptLab.text = [responseDic objectForKey:@"message"];
            [self showPromptLab];
            [self.goodsTableView removeFromSuperview];
        }
        
        
        NSLog(@"arry-->%@",goodsDataArray);
        [self isDowmloadMore:[responseDic objectForKey:@"datasource"]];
        
        
        
        [self.indicator stopAnimating];
        [self.loadingView removeFromSuperview];
        self.loadingView = nil;
        
        [self hearderRereshingEnd];
        
    } errorHandler:^(NSError *error) {
        
        NSLog(@"error-->%@",error);
        [self.indicator stopAnimating];
        self.indicator.hidden = YES;
        self.noNetView.hidden = NO;
        
        
        [self hearderRereshingEnd];
    }];
    
}

-(void)requestSearchGoodsMoreWithDic:(NSDictionary *)dic
{
    
    [[MKHttpServiceEngine shareMyInstance] requestSearchGoodsWithDic:dic completionHandler:^(id responseObject) {
        
        NSDictionary *responseDic = responseObject;
        NSLog(@"arrys-->%@",responseDic);
        
        if ([[responseDic objectForKey:@"success"] boolValue] == 1) {
            if ([goodsDataArray containsObject:[[responseDic objectForKey:@"datasource"] firstObject]]) {
                //            [goodsDataArray removeObjectsInArray:[responseDic objectForKey:@"datasource"]];
                //            [goodsDataArray addObjectsFromArray:[responseDic objectForKey:@"datasource"]];
            }else
            {
                [goodsDataArray addObjectsFromArray:[responseDic objectForKey:@"datasource"]];
            }
            [self.goodsTableView reloadData];
        }
        
        NSLog(@"arry-->%@",goodsDataArray);
        
        [self isDowmloadMore:[responseDic objectForKey:@"datasource"]];
        
        [self hearderRereshingEnd];
        
    } errorHandler:^(NSError *error) {
        
        NSLog(@"error-->%@",error);
        
        currentPage --;
        
        [self hearderRereshingEnd];
    }];
    
}

#pragma mark MKHttpRequestAction  GoodsList 分类
-(void)requestClassifyGoodsListWithDic:(NSDictionary *)dic
{
    self.loadingView.frame = CGRectMake(0, STAR_Y, SCREEN_WIDTH, SCREEN_HEIGHT);
    self.loadingView.backgroundColor = [UIColor whiteColor];
    [self.view addSubview:self.loadingView];
    
    self.noNetView.hidden = YES;
    self.indicator.hidden = NO;
    //    _indicator = [[UIActivityIndicatorView alloc] initWithActivityIndicatorStyle:UIActivityIndicatorViewStyleGray];
    [_indicator setCenter:CGPointMake(SCREEN_WIDTH/2., SCREEN_HEIGHT/2.)];
    //    [self.loadingView addSubview:_indicator];
    [self.indicator startAnimating];
    self.noNetView.hidden = YES;
    
    [[MKHttpServiceEngine shareMyInstance] requestClassifyGoodsListWithDic:dic completionHandler:^(id responseObject) {
        NSDictionary *responseDic = responseObject;
        
        if ([[responseDic objectForKey:@"success"] boolValue] == 1) {
            [goodsDataArray removeAllObjects];
            
            [goodsDataArray addObjectsFromArray:[responseDic objectForKey:@"datasource"]];
            
            NSLog(@"arry-->%@",goodsDataArray);
            [self isDowmloadMore:[responseDic objectForKey:@"datasource"]];
            
            [self.goodsTableView reloadData];
        }else
        {
            if (![[responseDic objectForKey:@"message"] isKindOfClass:[NSNull class]]) {
                self.promptLab.text = [responseDic objectForKey:@"message"];
                [self showPromptLab];
            }else
            {
                self.promptLab.text = @"暂无商品";
                [self showPromptLab];
            }
            
            
            [self.goodsTableView removeFromSuperview];
        }
        
        
        [self.indicator stopAnimating];
        [self.loadingView removeFromSuperview];
        self.loadingView = nil;
        
        
        [self hearderRereshingEnd];
    } errorHandler:^(NSError *error) {
        
        NSLog(@"error-->%@",error);
        [self.indicator stopAnimating];
        self.indicator.hidden = YES;
        self.noNetView.hidden = NO;
        
        
        [self hearderRereshingEnd];
    }];
    
}

-(void)requestClassifyGoodsListMoreWithDic:(NSDictionary *)dic
{
    
    [[MKHttpServiceEngine shareMyInstance] requestClassifyGoodsListWithDic:dic completionHandler:^(id responseObject) {
        
        NSDictionary *responseDic = responseObject;
        NSLog(@"arrys-->%@",responseDic);
        
        if ([[responseDic objectForKey:@"success"] boolValue] == 1) {
            if ([goodsDataArray containsObject:[[responseDic objectForKey:@"datasource"] firstObject]]) {
                //                [goodsDataArray removeObjectsInArray:[responseDic objectForKey:@"datasource"]];
                //                [goodsDataArray addObjectsFromArray:[responseDic objectForKey:@"datasource"]];
            }else
            {
                [goodsDataArray addObjectsFromArray:[responseDic objectForKey:@"datasource"]];
            }
            [self.goodsTableView reloadData];
        }
        
        NSLog(@"arry-->%@",goodsDataArray);
        
        [self isDowmloadMore:[responseDic objectForKey:@"datasource"]];
        
        
        [self hearderRereshingEnd];
    } errorHandler:^(NSError *error) {
        
        NSLog(@"error-->%@",error);
        
        currentPage --;
        
        [self hearderRereshingEnd];
    }];
    
}

#pragma mark MKHttpRequestAction  CollectGoodsList 收藏
-(void)requestCollectListWithDic:(NSDictionary *)dic
{
    self.loadingView.frame = CGRectMake(0, STAR_Y, SCREEN_WIDTH, SCREEN_HEIGHT);
    self.loadingView.backgroundColor = [UIColor whiteColor];
    [self.view addSubview:self.loadingView];
    
    self.noNetView.hidden = YES;
    self.indicator.hidden = NO;
    //    _indicator = [[UIActivityIndicatorView alloc] initWithActivityIndicatorStyle:UIActivityIndicatorViewStyleGray];
    [_indicator setCenter:CGPointMake(SCREEN_WIDTH/2., SCREEN_HEIGHT/2.)];
    //    [self.loadingView addSubview:_indicator];
    [self.indicator startAnimating];
    self.noNetView.hidden = YES;
    
    [[MKHttpServiceEngine shareMyInstance] requestCollectListWithDic:dic completionHandler:^(id responseObject) {
        NSDictionary *responseDic = responseObject;
        
        NSLog(@"arry-->%@",responseDic);
        
        if ([[responseDic objectForKey:@"success"] boolValue] == 1) {
            [goodsDataArray removeAllObjects];
            
            [goodsDataArray addObjectsFromArray:[responseDic objectForKey:@"datasource"]];
            
            
            [self isDowmloadMore:[responseDic objectForKey:@"datasource"]];
            
            [self.goodsTableView reloadData];
            
            for (NSDictionary *dic in goodsDataArray) {
                if (![[[AppSet shareInstance] collectArray] containsObject:[dic objectForKey:@"id"]]) {
                    NSMutableArray *arry = [NSMutableArray arrayWithArray:[[AppSet shareInstance] collectArray]];
                    [arry addObject:[dic objectForKey:@"id"]];
                    [[AppSet shareInstance] setCollectArray:arry];
                    [[AppSet shareInstance] saveCollectGoodsData];
                }
            }
            
            [self showNoCollectView:NO];
        }else
        {
            //            if ([[responseDic objectForKey:@"datasource"] count] < 1) {
            self.promptLab.text = @"暂无收藏商品";
            [self showPromptLab];
            
            [self showNoCollectView:YES];
            //            }
            
            
            [self.goodsTableView removeFromSuperview];
        }
        
        
        [self.indicator stopAnimating];
        [self.loadingView removeFromSuperview];
        self.loadingView = nil;
        
        
        [self hearderRereshingEnd];
    } errorHandler:^(NSError *error) {
        
        NSLog(@"error-->%@",error);
        [self.indicator stopAnimating];
        self.indicator.hidden = YES;
        self.noNetView.hidden = NO;
        
        
        [self hearderRereshingEnd];
    }];
    
}

-(void)requestCollectListMoreWithDic:(NSDictionary *)dic
{
    
    [[MKHttpServiceEngine shareMyInstance] requestCollectListWithDic:dic completionHandler:^(id responseObject) {
        
        NSDictionary *responseDic = responseObject;
        NSLog(@"arrys-->%@",responseDic);
        
        if ([[responseDic objectForKey:@"success"] boolValue] == 1) {
            if ([goodsDataArray containsObject:[[responseDic objectForKey:@"datasource"] firstObject]]) {
                //                [goodsDataArray removeObjectsInArray:[responseDic objectForKey:@"datasource"]];
                //                [goodsDataArray addObjectsFromArray:[responseDic objectForKey:@"datasource"]];
            }else
            {
                [goodsDataArray addObjectsFromArray:[responseDic objectForKey:@"datasource"]];
            }
            [self.goodsTableView reloadData];
        }
        
        NSLog(@"arry-->%@",goodsDataArray);
        
        [self isDowmloadMore:[responseDic objectForKey:@"datasource"]];
        
        
        [self hearderRereshingEnd];
        
    } errorHandler:^(NSError *error) {
        
        NSLog(@"error-->%@",error);
        
        currentPage --;
        
        
        [self hearderRereshingEnd];
    }];
    
}

#pragma mark MKHttpRequestAction  SortGoodsList
-(void)requestSortClassifyGoodsListWithDic:(NSDictionary *)dic  withSortPath:(NSString *)sortStr
{
    self.loadingView.frame = CGRectMake(0, STAR_Y, SCREEN_WIDTH, SCREEN_HEIGHT);
    self.loadingView.backgroundColor = [UIColor whiteColor];
    [self.view addSubview:self.loadingView];
    
    self.noNetView.hidden = YES;
    self.indicator.hidden = NO;
    [_indicator setCenter:CGPointMake(SCREEN_WIDTH/2., SCREEN_HEIGHT/2.)];
    [self.indicator startAnimating];
    self.noNetView.hidden = YES;
    
    
    [ShareFunction showHUD];
    
    [[MKHttpServiceEngine shareMyInstance] requestSortGoodsListWithDic:dic withSortPath:sortStr completionHandler:^(id responseObject) {
        NSDictionary *responseDic = responseObject;
        NSLog(@"arry-->%@",responseDic);
        
        if ([[responseDic objectForKey:@"success"] boolValue] == 1) {
            [goodsDataArray removeAllObjects];
            
            [goodsDataArray addObjectsFromArray:[responseDic objectForKey:@"datasource"]];
            
            NSLog(@"arry-->%@",goodsDataArray);
            [self isDowmloadMore:[responseDic objectForKey:@"datasource"]];
            
//            [self hearderRereshingEnd];//在reloadData之前
            
            [self.goodsTableView reloadData];
        }else
        {
            if (![[responseDic objectForKey:@"message"] isKindOfClass:[NSNull class]]) {
                self.promptLab.text = [responseDic objectForKey:@"message"];
                [self showPromptLab];
            }else
            {
                self.promptLab.text = @"赞无数据";
                [self showPromptLab];
            }
            
            
            [self.goodsTableView removeFromSuperview];
        }
        
        
        [self.indicator stopAnimating];
        [self.loadingView removeFromSuperview];
        self.loadingView = nil;
        
        
        [ShareFunction hiddenHUD];
        [self showFenLeiView:NO];
        
//        [self performSelector:@selector(hearderRereshingEnd)];
       
    } errorHandler:^(NSError *error) {
        
        NSLog(@"error-->%@",error);
        [self.indicator stopAnimating];
        self.indicator.hidden = YES;
        self.noNetView.hidden = NO;
        
        [ShareFunction hiddenHUD];
        [self showFenLeiView:NO];
        
//        [self hearderRereshingEnd];
    }];
    
}

-(void)requestSortClassifyGoodsListMoreWithDic:(NSDictionary *)dic withSortPath:(NSString *)sortStr
{
    
    [[MKHttpServiceEngine shareMyInstance] requestSortGoodsListWithDic:dic withSortPath:sortStr completionHandler:^(id responseObject) {
        
        NSDictionary *responseDic = responseObject;
        NSLog(@"arrys-->%@",responseDic);
        
        if ([[responseDic objectForKey:@"success"] boolValue] == 1) {
            if ([goodsDataArray containsObject:[[responseDic objectForKey:@"datasource"] firstObject]]) {
                //                [goodsDataArray removeObjectsInArray:[responseDic objectForKey:@"datasource"]];
                //                [goodsDataArray addObjectsFromArray:[responseDic objectForKey:@"datasource"]];
            }else
            {
                [goodsDataArray addObjectsFromArray:[responseDic objectForKey:@"datasource"]];
            }
            [self.goodsTableView reloadData];
        }
        
        NSLog(@"arry-->%@",goodsDataArray);
        
        [self isDowmloadMore:[responseDic objectForKey:@"datasource"]];
        
        
//        [self hearderRereshingEnd];
        
    } errorHandler:^(NSError *error) {
        
        NSLog(@"error-->%@",error);
        
        currentPage --;
        
        
//        [self hearderRereshingEnd];x
    }];
    
}




- (void)didReceiveMemoryWarning
{
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}



@end
